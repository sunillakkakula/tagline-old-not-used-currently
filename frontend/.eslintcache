[{"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\index.js":"1","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\App.js":"2","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\AboutUs.js":"3","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Hero.js":"4","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Story.js":"5","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Partners.js":"6","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Team.js":"7","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Gallery.js":"8","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\WhoWeAre.js":"9","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\organisms\\index.js":"10","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\molecules\\index.js":"11","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\molecules\\SectionHeader\\index.js":"12","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\organisms\\CardBase\\index.js":"13","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\atoms\\Image\\index.js":"14","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\molecules\\SectionHeader\\SectionHeader.js":"15","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\atoms\\Image\\Image.js":"16","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\organisms\\CardBase\\CardBase.js":"17","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\SubMenuHeader.js":"18","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CategoriesSubMenu.js":"19","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductScreen.js":"20","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Theme.js":"21","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CategoryWiseProducts.js":"22","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Contact.js":"23","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\OrderScreen.js":"24","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\SignUpScreen.js":"25","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProfileScreen.js":"26","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ShippingScreen.js":"27","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\PlaceOrderScreen.js":"28","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CartLayoutScreen.js":"29","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\PaymentScreen.js":"30","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\UserEditScreen.js":"31","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Header.js":"32","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductCreateScreen.js":"33","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\OrderListScreen.js":"34","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\LoginScreen.js":"35","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\MuiHeader.js":"36","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CategoriesSubMenuVer2.js":"37","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Dashboard.js":"38","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductSettingsScreen.js":"39","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\UserListScreen.js":"40","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductListScreen.js":"41","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductEditScreen.js":"42","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Card\\CardBody.js":"43","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Card\\CardHeader.js":"44","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Card\\Card.js":"45","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Message.js":"46","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Grid\\GridItem.js":"47","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CustomizedBadges.js":"48","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ShoppingCartCountScreen.js":"49","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Grid\\GridContainer.js":"50","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductOverview.js":"51","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ZipCodeTracker.js":"52","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Paginate.js":"53","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\controls\\Spinner.js":"54","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\MainCategories.js":"55","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductConfigureTable.js":"56","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\orderAction.js":"57","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\productAction.js":"58","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\userAction.js":"59","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\productConstants.js":"60","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\categoriesMenuData.js":"61","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Writeup.js":"62","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\BestSellingProducts.js":"63","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductConfigureForm.js":"64","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\data\\index.js":"65","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\cartAction.js":"66","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\categoryAction.js":"67","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\cartConstants.js":"68","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\userConstants.js":"69","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\orderConstants.js":"70","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\categoryConstants.js":"71","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\StepperScreen.js":"72","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CheckoutSteps.js":"73","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"74","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\assets\\jss\\material-dashboard-react.js":"75","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"76","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"77","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\store.js":"78","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\rootCategoryReducers.js":"79","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\cartReducers.js":"80","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\userReducers.js":"81","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\categoryReducers.js":"82","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\orderReducers.js":"83","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\productReducers.js":"84","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\rootCategoryConstants.js":"85"},{"size":264,"mtime":1618473656962,"results":"86","hashOfConfig":"87"},{"size":4790,"mtime":1618472077644,"results":"88","hashOfConfig":"87"},{"size":1911,"mtime":1612539523567,"results":"89","hashOfConfig":"87"},{"size":2296,"mtime":1612523429040,"results":"90","hashOfConfig":"87"},{"size":2437,"mtime":1612522978408,"results":"91","hashOfConfig":"87"},{"size":1965,"mtime":1612523012552,"results":"92","hashOfConfig":"87"},{"size":3114,"mtime":1612539127371,"results":"93","hashOfConfig":"87"},{"size":1309,"mtime":1612523041250,"results":"94","hashOfConfig":"87"},{"size":1792,"mtime":1612523569399,"results":"95","hashOfConfig":"87"},{"size":1334,"mtime":1612523751403,"results":"96","hashOfConfig":"87"},{"size":496,"mtime":1612523526231,"results":"97","hashOfConfig":"87"},{"size":43,"mtime":1612032237377,"results":"98","hashOfConfig":"87"},{"size":38,"mtime":1612032237436,"results":"99","hashOfConfig":"87"},{"size":35,"mtime":1612032237306,"results":"100","hashOfConfig":"87"},{"size":5466,"mtime":1612032237376,"results":"101","hashOfConfig":"87"},{"size":1556,"mtime":1612032237305,"results":"102","hashOfConfig":"87"},{"size":3006,"mtime":1612032237435,"results":"103","hashOfConfig":"87"},{"size":11988,"mtime":1612011497408,"results":"104","hashOfConfig":"87"},{"size":11798,"mtime":1612540263450,"results":"105","hashOfConfig":"87"},{"size":12156,"mtime":1615801816172,"results":"106","hashOfConfig":"87"},{"size":3251,"mtime":1615203662972,"results":"107","hashOfConfig":"87"},{"size":2324,"mtime":1615184652529,"results":"108","hashOfConfig":"87"},{"size":4009,"mtime":1612521686426,"results":"109","hashOfConfig":"87"},{"size":9993,"mtime":1616048476435,"results":"110","hashOfConfig":"87"},{"size":8516,"mtime":1616241431965,"results":"111","hashOfConfig":"87"},{"size":6834,"mtime":1615184654144,"results":"112","hashOfConfig":"87"},{"size":6885,"mtime":1615784703900,"results":"113","hashOfConfig":"87"},{"size":17569,"mtime":1615785518506,"results":"114","hashOfConfig":"87"},{"size":14273,"mtime":1616854302059,"results":"115","hashOfConfig":"87"},{"size":4735,"mtime":1615784747080,"results":"116","hashOfConfig":"87"},{"size":1553,"mtime":1615184654425,"results":"117","hashOfConfig":"87"},{"size":6022,"mtime":1612262739643,"results":"118","hashOfConfig":"87"},{"size":16502,"mtime":1615832970653,"results":"119","hashOfConfig":"87"},{"size":7454,"mtime":1616048125547,"results":"120","hashOfConfig":"87"},{"size":6031,"mtime":1618200792383,"results":"121","hashOfConfig":"87"},{"size":8502,"mtime":1615610856594,"results":"122","hashOfConfig":"87"},{"size":3972,"mtime":1614230190167,"results":"123","hashOfConfig":"87"},{"size":1449,"mtime":1615184652596,"results":"124","hashOfConfig":"87"},{"size":2082,"mtime":1616051016763,"results":"125","hashOfConfig":"87"},{"size":2768,"mtime":1615184654511,"results":"126","hashOfConfig":"87"},{"size":9030,"mtime":1615871578595,"results":"127","hashOfConfig":"87"},{"size":14648,"mtime":1615184653912,"results":"128","hashOfConfig":"87"},{"size":1020,"mtime":1614509068005,"results":"129","hashOfConfig":"87"},{"size":1261,"mtime":1614509366003,"results":"130","hashOfConfig":"87"},{"size":1049,"mtime":1614509818359,"results":"131","hashOfConfig":"87"},{"size":243,"mtime":1614004063337,"results":"132","hashOfConfig":"87"},{"size":616,"mtime":1614508567161,"results":"133","hashOfConfig":"87"},{"size":1664,"mtime":1614350753939,"results":"134","hashOfConfig":"87"},{"size":957,"mtime":1615610833567,"results":"135","hashOfConfig":"87"},{"size":651,"mtime":1614508567151,"results":"136","hashOfConfig":"87"},{"size":3003,"mtime":1615825357456,"results":"137","hashOfConfig":"87"},{"size":1813,"mtime":1612181999075,"results":"138","hashOfConfig":"87"},{"size":750,"mtime":1614617736173,"results":"139","hashOfConfig":"87"},{"size":492,"mtime":1612016729608,"results":"140","hashOfConfig":"87"},{"size":4120,"mtime":1614615118888,"results":"141","hashOfConfig":"87"},{"size":3674,"mtime":1616066640823,"results":"142","hashOfConfig":"87"},{"size":5670,"mtime":1616852954632,"results":"143","hashOfConfig":"87"},{"size":10628,"mtime":1615362408931,"results":"144","hashOfConfig":"87"},{"size":6959,"mtime":1616241421910,"results":"145","hashOfConfig":"87"},{"size":2975,"mtime":1614557368283,"results":"146","hashOfConfig":"87"},{"size":14665,"mtime":1612755369190,"results":"147","hashOfConfig":"87"},{"size":2121,"mtime":1612846056320,"results":"148","hashOfConfig":"87"},{"size":3949,"mtime":1615185533195,"results":"149","hashOfConfig":"87"},{"size":5489,"mtime":1616051311094,"results":"150","hashOfConfig":"87"},{"size":3421,"mtime":1612522274055,"results":"151","hashOfConfig":"87"},{"size":3251,"mtime":1616851577483,"results":"152","hashOfConfig":"87"},{"size":2653,"mtime":1614573169240,"results":"153","hashOfConfig":"87"},{"size":384,"mtime":1615788219743,"results":"154","hashOfConfig":"87"},{"size":1476,"mtime":1612011658095,"results":"155","hashOfConfig":"87"},{"size":1237,"mtime":1612011658062,"results":"156","hashOfConfig":"87"},{"size":883,"mtime":1612011658059,"results":"157","hashOfConfig":"87"},{"size":4585,"mtime":1615784714796,"results":"158","hashOfConfig":"87"},{"size":1142,"mtime":1612106934430,"results":"159","hashOfConfig":"87"},{"size":821,"mtime":1614509225708,"results":"160","hashOfConfig":"87"},{"size":7032,"mtime":1614510789068,"results":"161","hashOfConfig":"87"},{"size":298,"mtime":1614509016970,"results":"162","hashOfConfig":"87"},{"size":3005,"mtime":1614509195987,"results":"163","hashOfConfig":"87"},{"size":3602,"mtime":1615261855192,"results":"164","hashOfConfig":"87"},{"size":2277,"mtime":1612011667259,"results":"165","hashOfConfig":"87"},{"size":1461,"mtime":1615798037248,"results":"166","hashOfConfig":"87"},{"size":3478,"mtime":1612011667261,"results":"167","hashOfConfig":"87"},{"size":2093,"mtime":1612011667244,"results":"168","hashOfConfig":"87"},{"size":3374,"mtime":1614326914278,"results":"169","hashOfConfig":"87"},{"size":6710,"mtime":1614576313928,"results":"170","hashOfConfig":"87"},{"size":1274,"mtime":1612011658092,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aygjjh",{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"177"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"177"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"177"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"177"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"177"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"177"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"177"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"177"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"177"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"177"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"177"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"177"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"177"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"177"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"177"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"177"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"177"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"177"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"177"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"177"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"177"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"177"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"177"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"177"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"177"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"177"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"177"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"177"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"177"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"177"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"177"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"177"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"177"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"177"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"177"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\index.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\App.js",["379","380","381","382"],"import CategoriesSubMenu from \"./components/CategoriesSubMenu\";\nimport { Container } from \"@material-ui/core\";\nimport SubMenuHeader from \"./components/SubMenuHeader\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./components/Theme\";\nimport Header from \"./components/Header\";\nimport CategoryWiseProducts from \"./components/CategoryWiseProducts\";\nimport Contact from \"./components/Contact\";\nimport AboutUs from \"./components/AboutUs\";\nimport ProductScreen from \"./components/ProductScreen\";\nimport CartLayoutScreen from \"./components/CartLayoutScreen\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport SignUpScreen from \"./components/SignUpScreen\";\nimport ProfileScreen from \"./components/ProfileScreen\";\nimport ShippingScreen from \"./components/ShippingScreen\";\nimport PaymentScreen from \"./components/PaymentScreen\";\nimport PlaceOrderScreen from \"./components/PlaceOrderScreen\";\nimport OrderScreen from \"./components/OrderScreen\";\nimport UserListScreen from \"./components/UserListScreen\";\nimport UserEditScreen from \"./components/UserEditScreen\";\nimport ProductListScreen from \"./components/ProductListScreen\";\nimport ProductEditScreen from \"./components/ProductEditScreen\";\nimport ProductCreateScreen from \"./components/ProductCreateScreen\";\nimport OrderListScreen from \"./components/OrderListScreen\";\n// import SubMenuHeader from \"./components/SubMenuHeader\";\nimport MuiHeader from \"./components/MuiHeader\";\nimport CategoriesSubMenuVer2 from \"./components/CategoriesSubMenuVer2\";\nimport Dashboard from \"./components/Dashboard\";\nimport ProductSettingsScreen from \"./components/ProductSettingsScreen\";\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        {/* NEED TO APPLY MARGIN  TO APP BAR REFER MUI C...\n            AND COMMENT THE BELOW LIKE AFTER MAKING CHANGES  -KSP\n        */}\n        {/* <CategoriesSubMenu /> */}\n        {/* <MuiHeader /> */}\n        <MuiHeader />\n        {/* <SubMenuHeader /> */}\n        {/* <CategoriesSubMenuVer2 /> */}\n        <main className=\"py-0\">\n          <Container>\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/signup\" component={SignUpScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/product/:productId\" component={ProductScreen} exact />\n            <Route path=\"/cart/:id?\" component={CartLayoutScreen} />\n            <Route path=\"/showcart\" component={CartLayoutScreen} />\n            {/* <Route path=\"/\" component={CartLayoutScreen} /> */}\n            <Route path=\"/admin/userlist\" component={UserListScreen} exact />\n            <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n            <Route\n              path=\"/admin/productlist\"\n              component={ProductListScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/productlist/:pageNumber\"\n              component={ProductListScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/product/:id/edit\"\n              component={ProductEditScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/product/new\"\n              component={ProductCreateScreen}\n              exact\n            />\n            <Route path=\"/admin/orderlist\" component={OrderListScreen} exact />\n            <Route\n              path=\"/search/:keyword\"\n              component={CategoryWiseProducts}\n              exact\n            />\n            <Route\n              path=\"/page/:pageNumber\"\n              component={CategoryWiseProducts}\n              exact\n            />\n            <Route\n              path=\"/search/:keyword/page/:pageNumber\"\n              component={CategoryWiseProducts}\n              exact\n            />\n            <Route\n              path=\"/category/:categoryId\"\n              component={CategoryWiseProducts}\n              exact\n            />\n            <Route\n              path=\"/admin/product-settings/:productId\"\n              component={ProductSettingsScreen}\n              exact\n            />\n            <Route path=\"/admin/products\" component={ProductListScreen} exact />\n            <Route path=\"/contact\" component={Contact} exact />\n            <Route path=\"/aboutus\" component={AboutUs} exact />\n            <Route path=\"/\" component={Dashboard} exact />\n          </Container>\n        </main>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",["383","384"],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\AboutUs.js",["385","386","387","388","389","390","391","392","393","394"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Section, SectionAlternate } from \"./organisms\";\r\nimport Contact from \"./Contact\";\r\nimport Hero from \"../components/Hero\";\r\nimport Story from \"../components/Story\";\r\nimport WhoWeAre from \"../components/WhoWeAre\";\r\nimport Team from \"../components/Team\";\r\nimport Partners from \"../components/Partners\";\r\nimport Gallery from \"../components/Gallery\";\r\n\r\nimport { team, companies, mapData, gallery } from \"../data\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  sectionNoPaddingTop: {\r\n    paddingTop: 0,\r\n  },\r\n  sectionPartners: {\r\n    boxShadow: \"0 5px 20px 0 rgba(90, 202, 157, 0.05)\",\r\n    \"& .section-alternate__content\": {\r\n      paddingTop: theme.spacing(5),\r\n      paddingBottom: theme.spacing(5),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AboutUs = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      Some About Us Content\r\n      <Section />\r\n      <Team data={team} />\r\n      {/* <Hero /> */}\r\n      {/* <Section>\r\n        <Story />\r\n      </Section> */}\r\n      {/* <Hero /> */}\r\n      {/* <Hero />\r\n      <Section>\r\n        <Story />\r\n      </Section>\r\n      <Section className={classes.sectionNoPaddingTop}>\r\n        <WhoWeAre />\r\n      </Section>\r\n      <Section className={classes.sectionNoPaddingTop}>\r\n        <Team data={team} />\r\n      </Section>\r\n      <SectionAlternate className={classes.sectionPartners}>\r\n        <Partners data={companies} />\r\n      </SectionAlternate>\r\n      <Contact data={mapData} />\r\n      <SectionAlternate>\r\n        <Gallery data={gallery} />\r\n      </SectionAlternate> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n// export default AboutUs;\r\n// import React from \"react\";\r\n\r\n// const AboutUs = () => {\r\n//   return <div>About Us</div>;\r\n// };\r\n\r\n// export default AboutUs;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Hero.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Story.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Partners.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Team.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Gallery.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\WhoWeAre.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\organisms\\index.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\molecules\\index.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\molecules\\SectionHeader\\index.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\organisms\\CardBase\\index.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\atoms\\Image\\index.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\molecules\\SectionHeader\\SectionHeader.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\atoms\\Image\\Image.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\organisms\\CardBase\\CardBase.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\SubMenuHeader.js",["395","396"],"import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  groceries: {\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    margin: \"0 20px\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\nconst SubMenuHeader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div id=\"container\">\r\n      <div>\r\n        <div className=\"_331-kn _2tvxW\">\r\n          <div\r\n            className=\"InyRMC _3Il5oO\"\r\n            data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU\"\r\n          >\r\n            <div className=\"_37M3Pb\">\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Staples\"\r\n                      src=\"/Staples.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Packaged Food\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Snacks - Beverages\"\r\n                      src=\"/Snacks-Beverages.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.HI2REO8H1YPI\"\r\n              >\r\n                <>\r\n                  <div className=\"_1mkliO\">\r\n                    <div\r\n                      className=\"CXW8mj\"\r\n                      style={{ height: \"64px\", width: \"64px\" }}\r\n                    >\r\n                      <img\r\n                        className=\"_396cs4 _3exPp9\"\r\n                        alt=\"Snacks &amp; Beverages \"\r\n                        src=\"Snacks-Beverages.jpg\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"_1psGvi SLyWEo\">\r\n                    <DropdownMenu\r\n                      className={classes.groceries}\r\n                      menu={\r\n                        <span>\r\n                          Snacks & Beverages\r\n                          <IoIosArrowDown />\r\n                        </span>\r\n                      }\r\n                      menus={[\r\n                        {\r\n                          label: \"Biscuits\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Chips,Namkeen & Snacks\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        { label: \"Tea\", href: \"\", icon: null },\r\n\r\n                        {\r\n                          label: \"Coffee\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Juices\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Health Drink Mix\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Soft Drinks\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Water\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </>\r\n              </div> */}\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Packaged Food\"\r\n                      src=\"/Packaged-Food.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Packaged Food\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.VGFMBXS1MB2C\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Personal &amp;  Baby Care\"\r\n                      src=\"/Baby-Care.jpg  \"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Personal &amp; Baby Care\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Snacks - Beverages\"\r\n                      src=\"/Household-Care.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Household Care\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Dairy - Eggs\"\r\n                      src=\"/Dairy-Eggs.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Dairy - Eggs\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"_3LxdjL _3NzWOH\">\r\n          <div className=\"_1TVFmy _23XefD\">\r\n            <div\r\n              className=\"ZM3_EH\"\r\n              style={{ transform: \"scaleX(0.811128)\" }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"_1EcK2J _38JCdA\">\r\n          <div className=\"bra6U8\">\r\n            <svg\r\n              width=\"16\"\r\n              height=\"27\"\r\n              viewBox=\"0 0 16 27\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"_2TdLiZ\"\r\n            >\r\n              <path\r\n                d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                fill=\"#fff\"\r\n                className=\"_3ZKfA2\"\r\n              ></path>\r\n            </svg>\r\n            <span>Back to top</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubMenuHeader;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CategoriesSubMenu.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductScreen.js",["397","398","399","400","401"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { listProductDetailsByProductId } from \"../actions/productAction\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ReactSelectMaterialUi from \"react-select-material-ui\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Icon,\r\n  MenuItem,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GridContainer from \"../components/Grid/GridContainer\";\r\nimport GridItem from \"../components/Grid/GridItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  imageFrame: {\r\n    boxShadow: `0 5px 12px 0 ${theme.palette.cardShadow}`,\r\n    borderRadius: theme.spacing(1),\r\n  },\r\n  listGrid: {\r\n    overflow: \"hidden\",\r\n  },\r\n  partnerImage: {\r\n    maxWidth: 120,\r\n  },\r\n  imageIcon: {\r\n    height: \"60%\",\r\n  },\r\n  iconRoot: {\r\n    textAlign: \"center\",\r\n  },\r\n  image: {\r\n    objectFit: \"contain\",\r\n    height: 300,\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [quantitySelected, setQuantitySelected] = useState(() => {\r\n    return 0;\r\n  });\r\n\r\n  const options = Array(100)\r\n    .fill()\r\n    .map((_, i) => {\r\n      return i.toString();\r\n    });\r\n\r\n  const handleOrderTypeChange = (value) => {\r\n    console.log(\"Order Type Ver2 Changed :--> \" + value);\r\n    setOrderTypeSelected(value);\r\n  };\r\n  const orderTypeOptions = [\"Select\", \"Bulk\", \"Domestic\"];\r\n\r\n  const calculateSellingPrice = (qtySelected) => {\r\n    console.log(\"Exc calculateSellingPrice for QTY : \" + qtySelected);\r\n    if (\r\n      (orderTypeSelected === \"d\" || orderTypeSelected === \"Domestic\") &&\r\n      qtySelected > 0\r\n    ) {\r\n      return product.availableInDomestic\r\n        .filter((domestic) => domestic.unitOfMessure === uom)\r\n        .map((matchedRec) => {\r\n          console.log(\r\n            \"matchedRec.sellingPrice * counter : matchedRec.sellingPrice -> \" +\r\n              matchedRec.sellingPrice +\r\n              \" , qtySelected : -> \" +\r\n              qtySelected\r\n          );\r\n          console.log(\"Result of CALC\" + matchedRec.sellingPrice * qtySelected);\r\n          return matchedRec.sellingPrice * qtySelected;\r\n        });\r\n    } else if (\r\n      (orderTypeSelected === \"b\" || orderTypeSelected === \"Bulk\") &&\r\n      qtySelected > 0\r\n    ) {\r\n      return product.availableInBulk\r\n        .filter((bulk) => bulk.unitOfMessure === uom)\r\n        .map((matchedRec) => {\r\n          console.log(\r\n            \"matchedRec.sellingPrice * counter : matchedRec.sellingPrice -> \" +\r\n              matchedRec.sellingPrice +\r\n              \" , qtySelected : -> \" +\r\n              qtySelected\r\n          );\r\n          console.log(\"Result of CALC\" + matchedRec.sellingPrice * qtySelected);\r\n          return matchedRec.sellingPrice * qtySelected;\r\n        });\r\n    }\r\n  };\r\n  const [calculatedSellingPrice, setCalculatedSellingPrice] = useState(() => {\r\n    return 0.0;\r\n  });\r\n\r\n  let [orderTypeSelected, setOrderTypeSelected] = useState(\"bulk\");\r\n  const classes = useStyles();\r\n  const [uom, setUom] = useState(() => \"None\");\r\n  // const [disableFlag, setDisableFlag] = useState(Boolean(true));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(\"Exec useEffect..!\" + \"\" + uom + \"\" + orderTypeSelected);\r\n\r\n    dispatch(\r\n      listProductDetailsByProductId(\r\n        // match.params.subCategoryId,\r\n        match.params.productId\r\n      )\r\n    );\r\n  }, [dispatch, match]);\r\n\r\n  const productDetailsByProductId = useSelector(\r\n    (state) => state.productDetailsByProductId\r\n  );\r\n  const { loading, error, product } = productDetailsByProductId;\r\n\r\n  const renderUomOptions = () => {\r\n    console.log(\"*** Exec renderUomOptions --> Reading product ****\");\r\n    if (product) {\r\n      console.log(\"orderTypeSelected : \" + orderTypeSelected);\r\n      if (orderTypeSelected === \"Domestic\") {\r\n        console.log(\"Exec D Option Menu Code\");\r\n        console.log(product.availableInDomestic);\r\n        if (product.availableInDomestic) {\r\n          return product.availableInDomestic.map((domesticItem, i) => {\r\n            return (\r\n              <MenuItem key={i} value={domesticItem.unitOfMessure}>\r\n                {domesticItem.unitOfMessure}\r\n              </MenuItem>\r\n            );\r\n          });\r\n        }\r\n      }\r\n      if (orderTypeSelected === \"Bulk\") {\r\n        console.log(\"Exec b Option Menu Code\");\r\n        console.log(product);\r\n        if (product.availableInBulk) {\r\n          return product.availableInBulk.map((bulkItem, i) => {\r\n            return (\r\n              <MenuItem key={i} value={bulkItem.unitOfMessure}>\r\n                {bulkItem.unitOfMessure}\r\n              </MenuItem>\r\n            );\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(\r\n      `/cart/${match.params.productId}?qty=${quantitySelected}&uom=${uom}&order=${orderTypeSelected}`\r\n    );\r\n  };\r\n\r\n  const handleChangeUom = (event) => {\r\n    console.log(\"Handler for Change of UOM : Value :-> \" + event.target.value);\r\n    setUom((u) => event.target.value);\r\n    setQuantitySelected(0);\r\n    setCalculatedSellingPrice(0);\r\n  };\r\n  const handleChangeCounter = (value) => {\r\n    console.log(\"value : \" + value);\r\n    if (value === \"0\") {\r\n      console.log(\"value angd 0 are equal\");\r\n      setCalculatedSellingPrice(0);\r\n    } else {\r\n      console.log(\"value angd 0 are  NOT equal\");\r\n      setQuantitySelected(value);\r\n      console.log(calculateSellingPrice(value));\r\n      setCalculatedSellingPrice(calculateSellingPrice(value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Link\r\n            className=\"btn\"\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            to=\"/\"\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"#26A541\",\r\n              marginTop: \"1rem\",\r\n              marginBottom: \"1rem\",\r\n              align: \"center\",\r\n              width: \"9rem\",\r\n            }}\r\n          >\r\n            Go to Groceries\r\n          </Link>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {console.log(\"Product : \" + product)}\r\n      {!product ? (\r\n        <Message />\r\n      ) : (\r\n        <div>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\">{product.description}</Typography>\r\n                    <Divider />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Grid container spacing={2} data-aos=\"fade-up\">\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Order Type\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            <ReactSelectMaterialUi\r\n                              style={{ width: \"10rem\" }}\r\n                              value=\"bulk\"\r\n                              options={orderTypeOptions}\r\n                              onChange={handleOrderTypeChange}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Unit Of Messure\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            <Select value={uom} onChange={handleChangeUom}>\r\n                              {renderUomOptions()}\r\n                            </Select>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Quantity\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            <ReactSelectMaterialUi\r\n                              style={{ width: \"10rem\" }}\r\n                              value={quantitySelected}\r\n                              options={options}\r\n                              onChange={handleChangeCounter}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Price\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            <Icon classes={{ root: classes.iconRoot }}>\r\n                              <img\r\n                                alt=\"curency inr\"\r\n                                src={rupeeSvgIcon}\r\n                                className={classes.imageIcon}\r\n                              />\r\n                            </Icon>{\" \"}\r\n                            {calculatedSellingPrice\r\n                              ? calculatedSellingPrice\r\n                              : 0.0}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Availability Status\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            {product.countInStock > 0 ? (\r\n                              <span style={{ color: \"green\", fontWeight: 500 }}>\r\n                                IN STOCK\r\n                              </span>\r\n                            ) : (\r\n                              <span style={{ color: \"red\", fontWeight: 500 }}>\r\n                                OUT OF STOCK\r\n                              </span>\r\n                            )}\r\n                            {/* {product.price} */}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} align=\"center\">\r\n                        <Button\r\n                          disabled={\r\n                            product.countInStock === 0 ||\r\n                            calculatedSellingPrice === 0\r\n                          }\r\n                          align=\"center\"\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          type=\"submit\"\r\n                          color=\"primary\"\r\n                          onClick={addToCartHandler}\r\n                        >\r\n                          Add To Cart\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <img\r\n                  alt=\"productImage\"\r\n                  src={product.imageurl}\r\n                  className={classes.image}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Theme.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CategoryWiseProducts.js",["402"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { listProductsByCategoryId } from \"../actions/productAction\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery, Grid } from \"@material-ui/core\";\nimport ProductOverview from \"../components/ProductOverview\";\n\nconst CategoryWiseProducts = ({ history, match }) => {\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n  let categoryId = match.params.categoryId;\n  const productsByCategoryId = [];\n  const dispatch = useDispatch();\n  let renderProducts;\n  useEffect(() => {\n    console.log(\"match.params.categoryId : --> \" + categoryId);\n\n    dispatch(listProductsByCategoryId(categoryId));\n  }, [dispatch, categoryId]);\n  const productListByCategory = useSelector(\n    (state) => state.productListByCategory\n  );\n  const { loading, error, category } = productListByCategory;\n  console.log(productListByCategory);\n  if (category && category.subCategories) {\n    console.log(\"TRUE\");\n    category.subCategories.map(function (val, indx) {\n      console.log(val.products);\n      val.products.map(function (prd, ind) {\n        console.log(prd);\n        productsByCategoryId.push(prd);\n      });\n      return productsByCategoryId;\n    });\n  }\n\n  if (productsByCategoryId && productsByCategoryId.length > 0) {\n    renderProducts = (\n      <Grid container spacing={isMd ? 4 : 2}>\n        {productsByCategoryId.map((item, index) => (\n          <Grid item xs={12} sm={6} md={3} key={index} data-aos=\"fade-up\">\n            <ProductOverview product={item} categoryId={categoryId} />\n          </Grid>\n        ))}\n      </Grid>\n    );\n  } else {\n    renderProducts = (\n      <Message>No Records Found for Category ID : {categoryId}</Message>\n    );\n  }\n  /**\n   * BELOW CODE WILL BE REPLACED WITH dispatch -- SUNIL LAKKAKULA\n   */\n  /**\n   * URL : http://localhost:8080/api/subcategory/2/product\n   */\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>{renderProducts}</div>\n      )}\n    </>\n  );\n};\n\nexport default CategoryWiseProducts;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Contact.js",["403"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  useMediaQuery,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n} from \"@material-ui/core\";\n// import { SectionHeader } from \"../components/molecules\";\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\",\n    },\n  },\n  listItemText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: \"0 0 auto\",\n  },\n  listItem: {\n    justifyContent: \"flex-start\",\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"center\",\n    },\n  },\n  icon: {\n    background: \"transparent\",\n    borderRadius: 0,\n  },\n}));\n\nconst Contact = (props) => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      {/* <SectionHeader\n        title=\"Contact details\"\n        subtitle=\"Our contact details. We carefully read and answer to all your questions.\"\n        data-aos=\"fade-up\"\n        align={isMd ? \"center\" : \"left\"}\n      /> */}\n      <List disablePadding className={classes.list}>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-phone.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-phone@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Phone\"\n            secondary=\"+39 659-657-0133\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n              component: \"span\",\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-mail.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-mail@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Email\"\n            secondary=\"hi@maccarianagency.com\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-pin.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-pin@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Head Office\"\n            secondary=\"Via E. Golla 4\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n            }}\n          />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Contact;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\OrderScreen.js",["404","405","406","407","408","409"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { getOrderDetailsById } from \"../actions/orderAction\";\nimport { Divider, Grid, Icon, Paper, Typography } from \"@material-ui/core\";\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\nimport imagePath from \"../assets/images/products/edible-oils/Edible-Oils-2.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  imageIcon: {\n    height: \"80%\",\n  },\n  paper: {\n    height: \"100%\",\n    width: \"150vh\",\n    padding: \".5rem\",\n  },\n\n  link: {\n    color: \"white\",\n    backgroundColor: \"#26A541\",\n  },\n  iconRoot: {\n    textAlign: \"center\",\n  },\n}));\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  // const theme = useTheme();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (!userInfo) history.push(\"/login\");\n\n    if (orderId) dispatch(getOrderDetailsById(orderId));\n  }, [dispatch, history, orderId, userInfo]);\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { loading, error, order } = orderDetails;\n  console.log(\"Fetched Order by ID : \" + orderId);\n  console.log(order);\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Link\n            className=\"btn\"\n            to=\"/\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              marginRight: \"5rem\",\n            }}\n          >\n            Go to Groceries\n          </Link>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={8} container justify=\"left\">\n          <Paper className={classes.paper}>\n            <Grid container>\n              <Grid item xs={12}>\n                {order.orderItems.length === 0 ? (\n                  <Message>Your Order is empty</Message>\n                ) : (\n                  <Grid conatiner>\n                    <Grid item xs={12}>\n                      <Typography variant=\"h6\">Order # {orderId}</Typography>\n                    </Grid>\n                    <Divider />\n                    <Grid item xs={12}>\n                      <Typography variant=\"h6\">Order Details</Typography>\n                    </Grid>\n                    {order.orderItems.map((item, index) => (\n                      <Grid item key={index}>\n                        <Grid container>\n                          <Grid item xs={3}>\n                            <img\n                              className=\"img-thumbnail\"\n                              src={item.imageUrl}\n                              alt={item.name}\n                              style={{\n                                height: \"3.5rem\",\n                                width: \"3.5rem\",\n                                marginRight: \"5rem\",\n                              }}\n                            />\n                          </Grid>\n                          <Grid item xs={9}>\n                            <Grid container>\n                              <Grid\n                                item\n                                xs={3}\n                                style={{\n                                  justify: \"center\",\n                                  alignContent: \"center\",\n                                  marginRight: \"5rem\",\n                                  marginTop: \"1rem\",\n                                }}\n                              >\n                                <Typography variant=\"body1\">\n                                  {item.name}\n                                </Typography>\n                              </Grid>\n                              <Grid item xs={3}>\n                                <Typography variant=\"body1\">\n                                  {item.quantityOrdered} X {/* </Typography> */}\n                                  <Icon classes={{ root: classes.iconRoot }}>\n                                    <img\n                                      alt=\"curency inr\"\n                                      src={rupeeSvgIcon}\n                                      className={classes.imageIcon}\n                                    />\n                                  </Icon>\n                                  {item.unitPrice}=\n                                </Typography>\n                              </Grid>\n                              <Grid item xs={3} align=\"right\">\n                                <Typography variant=\"body1\">\n                                  <Icon classes={{ root: classes.iconRoot }}>\n                                    <img\n                                      alt=\"curency inr\"\n                                      src={rupeeSvgIcon}\n                                      className={classes.imageIcon}\n                                    />\n                                  </Icon>\n\n                                  {item.quantityOrdered * item.unitPrice}\n                                </Typography>\n                              </Grid>\n                              <Grid item xs={3}></Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Divider />\n                      </Grid>\n                    ))}\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={12} container justify=\"flex-start\">\n                          <Typography variant=\"h6\">Payment Details</Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                          <Typography variant=\"body1\">\n                            Payment Method\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={9}>\n                          <Typography variant=\"body1\">\n                            {order.paymentMethod}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={4} container justify=\"center\">\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\">Order Summary</Typography>\n            <Divider />\n            <Grid container spacing={1} row justify=\"center\">\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Items Cost</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {order.itemsPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Divider />\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Shipping Cost</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {order.shippingPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Tax</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {order.taxPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Total</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {order.totalPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\SignUpScreen.js",["410","411","412"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"./Message\";\nimport Spinner from \"./controls/Spinner\";\nimport { register } from \"../actions/userAction\";\nimport { Button, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3, 2),\n    height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    height: \"75vh\",\n    width: \"60vh\",\n  },\n  inputText: {\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n\n  input: {\n    \"&::placeholder\": {\n      color: \"gray\",\n      fontSize: \"0.85rem\",\n      fontWeight: 500,\n      fontFamily: \"Roboto\",\n    },\n    color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n  },\n}));\n\nconst SignUpScreen = ({ location, history }) => {\n  const classes = useStyles();\n  const [name, setName] = useState(() => \"\");\n  const [userName, setUserName] = useState(() => \"\");\n  const [email, setEmail] = useState(() => \"\");\n  const [password, setPassword] = useState(() => \"\");\n  const [contactNo, setContactNo] = useState(() => \"\");\n  const [confirmPassword, setConfirmPassword] = useState(() => \"\");\n  const [role, setRole] = useState(() => \"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(register(name, userName, password, email, contactNo, 0));\n    }\n  };\n\n  const handleReset = () => {\n    setName(() => \"\");\n    setUserName(() => \"\");\n    setEmail(() => \"\");\n    setPassword(() => \"\");\n    setContactNo(() => \"\");\n    setConfirmPassword(() => \"\");\n    setRole(() => \"\");\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={2}\n        style={{\n          top: \"10%\",\n          transform: \"translateY(+10%)\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={1}>\n            <Grid item>\n              <form onSubmit={submitHandler}>\n                <Paper className={classes.paper}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h6\" align=\"center\">\n                      Tagline Traders Signup{\" \"}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    {error && <Message variant=\"danger\">{error}</Message>}\n                    {loading && <Spinner />}\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      align=\"center\"\n                      placeholder=\"User Name\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"userName\"\n                      fullWidth\n                      onChange={(e) => setUserName(e.target.value)}\n                      type=\"text\"\n                      value={userName}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      align=\"center\"\n                      placeholder=\"Name\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"name\"\n                      fullWidth\n                      onChange={(e) => setName(e.target.value)}\n                      type=\"text\"\n                      value={name}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      placeholder=\"Password\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"password\"\n                      fullWidth\n                      onChange={(e) => setPassword(e.target.value)}\n                      type=\"password\"\n                      value={password}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      placeholder=\"Confirm Password\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"confirmPassword\"\n                      fullWidth\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      type=\"password\"\n                      value={confirmPassword}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      placeholder=\"Email\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"email\"\n                      fullWidth\n                      onChange={(e) => setEmail(e.target.value)}\n                      type=\"text\"\n                      value={email}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      placeholder=\"Contact No\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"contactNo\"\n                      fullWidth\n                      onChange={(e) => setContactNo(e.target.value)}\n                      type=\"text\"\n                      value={contactNo}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={1}>\n                      <Grid item xs={6}>\n                        <Button\n                          style={{\n                            marginLeft: \"0.75rem\",\n                            align: \"center\",\n                            width: \"9rem\",\n                          }}\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          onClick={submitHandler}\n                        >\n                          Save\n                        </Button>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Button\n                          style={{\n                            marginRight: \"0.75rem\",\n                            align: \"center\",\n                            width: \"9rem\",\n                          }}\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          onClick={handleReset}\n                        >\n                          Reset\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </form>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default SignUpScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProfileScreen.js",["413","414","415","416","417","418","419"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\nimport { listMyOrders } from \"../actions/orderAction\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { Button, Divider, Grid, Paper, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  imageFrame: {\n    boxShadow: `0 5px 12px 0 ${theme.palette.cardShadow}`,\n    borderRadius: theme.spacing(1),\n  },\n}));\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [contactNo, setContactNo] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const { loading, error, user } = userInfo;\n\n  // const userLogin = useSelector((state) => state.userLogin);\n  // const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n  const classes = useStyles();\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(userInfo.id));\n        // dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.emailId);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const updateProfileHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(\n        updateUserProfile({ id: user.id, name, email, password, contactNo })\n      );\n    }\n  };\n  // const updateProfileHandler = (e) => {\n  //   console.log(\"updating Profile..\");\n  //   // dispatch()\n  // };\n  return (\n    <div>\n      <Grid container spacing={1}>\n        {/* Profile Grid */}\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <h3>Users Profile</h3>\n                <Divider />\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Name\"\n                      label=\"Name\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setName(e.target.value)}\n                      type=\"text\"\n                      value={name}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Password\"\n                      label=\"Password\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setPassword(e.target.value)}\n                      type=\"text\"\n                      value={password}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={1} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Confirm Password\"\n                      label=\"Confirm Password\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      type=\"text\"\n                      value={confirmPassword}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={1} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Contact No\"\n                      label=\"Contact No\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setContactNo(e.target.value)}\n                      type=\"text\"\n                      value={contactNo}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Email Id\"\n                      label=\"Email Id\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setEmail(e.target.value)}\n                      type=\"text\"\n                      value={email}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={12} align=\"center\">\n                <Button\n                  align=\"center\"\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  onClick={updateProfileHandler}\n                >\n                  Update Profile\n                </Button>\n              </Grid>\n              {/* <button onClick={() => history.push(\"/\")}>Back to Groceries</button> */}\n            </Grid>\n          </Paper>\n        </Grid>\n        {/* Orders Grid */}\n        <Grid item xs={9}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <h3>Previous Orders</h3>\n                <Divider />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default ProfileScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ShippingScreen.js",["420","421"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartAction\";\nimport {\n  Grid,\n  Button,\n  Paper,\n  TextField,\n  TextareaAutosize,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport GridContainer from \"../components/Grid/GridContainer\";\nimport GridItem from \"../components/Grid/GridItem\";\nimport Card from \"./Card/Card\";\nimport CardHeader from \"./Card/CardHeader\";\nimport CardBody from \"./Card/CardBody\";\nimport StepperScreen from \"./StepperScreen\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3, 2),\n    // height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  textarea: {\n    resize: \"both\",\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n  paper: {\n    height: \"45vh\",\n    width: \"70vh\",\n  },\n  inputText: {\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n\n  input: {\n    \"&::placeholder\": {\n      color: \"gray\",\n      fontSize: \"0.85rem\",\n      fontWeight: 500,\n      fontFamily: \"Roboto\",\n    },\n    color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleGreen: {\n    color: \"#26A541\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontFamily: \"Roboto\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    textTransform: \"capitalize\",\n    textAlign: \"left\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n}));\n\nconst ShippingScreen = ({ history }) => {\n  const classes = useStyles();\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode }));\n    history.push(\"/payment\");\n  };\n  return (\n    <>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Link\n            className=\"btn\"\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            to=\"/\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n              align: \"center\",\n              width: \"9rem\",\n            }}\n          >\n            Go to Groceries\n          </Link>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <StepperScreen currentStep=\"1\" />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Shipping Details</h4>\n            </CardHeader>\n            <CardBody>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Grid container justify=\"center\" spacing={1}>\n                    <Grid item>\n                      <form onSubmit={submitHandler}>\n                        <Paper className={classes.paper}>\n                          <Grid item xs={12}>\n                            <TextField\n                              placeholder=\"Address\"\n                              multiline\n                              onChange={(e) => setAddress(e.target.value)}\n                              fullWidth\n                              variant=\"outlined\"\n                              inputProps={{ className: classes.textarea }}\n                            />\n                          </Grid>\n                          <Grid item xs={12}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"City\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"city\"\n                              fullWidth\n                              onChange={(e) => setCity(e.target.value)}\n                              type=\"text\"\n                              value={city}\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                          <Grid item xs={12}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Postal Code\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"postalcode\"\n                              fullWidth\n                              onChange={(e) => setPostalCode(e.target.value)}\n                              type=\"text\"\n                              value={postalCode}\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n\n                          <Grid item xs={12}>\n                            <Grid container justify=\"center\" spacing={1}>\n                              <Grid item xs={12}>\n                                <Button\n                                  style={{\n                                    align: \"center\",\n                                  }}\n                                  fullWidth\n                                  size=\"small\"\n                                  variant=\"contained\"\n                                  type=\"submit\"\n                                  color=\"primary\"\n                                >\n                                  Proceed to Payment\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Paper>\n                      </form>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ShippingScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\PlaceOrderScreen.js",["422","423","424"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { createOrder } from \"../actions/orderAction\";\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\nimport {\n  Button,\n  Paper,\n  useMediaQuery,\n  Grid,\n  Typography,\n  Icon,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\nimport imagePath from \"../assets/images/products/edible-oils/Edible-Oils-2.jpg\";\nimport GridContainer from \"../components/Grid/GridContainer\";\nimport GridItem from \"../components/Grid/GridItem\";\nimport StepperScreen from \"./StepperScreen\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  imageIcon: {\n    height: \"80%\",\n  },\n  paper: {\n    height: \"100%\",\n    width: \"150vh\",\n    padding: \".5rem\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  link: {\n    color: \"white\",\n    backgroundColor: \"#26A541\",\n  },\n  iconRoot: {\n    textAlign: \"center\",\n  },\n}));\nconst PlaceOrderScreen = ({ history }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const [payMethod, setPayMethod] = useState(\"\");\n\n  if (!cart.shippingAddress.address) {\n    history.push(\"/shipping\");\n  } else if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce(\n      (acc, item) => acc + item.unitPrice * item.quantityOrdered,\n      0\n    )\n  );\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals(Number((0.05 * cart.itemsPrice).toFixed(2)));\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order.id}`);\n      dispatch({ type: USER_DETAILS_RESET });\n      dispatch({ type: ORDER_CREATE_RESET });\n      // let cartItems = localStorage.getItem(\"paymentMethod\");\n      console.log(\n        \"localStorage.getItem(paymentMethod : \" +\n          localStorage.getItem(\"paymentMethod\")\n      );\n      setPayMethod(localStorage.getItem(\"paymentMethod\"));\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingDetails: cart.shippingAddress,\n        paymentDetails: {\n          paymentType: cart.paymentMethod,\n          status: \"Initiated\",\n        },\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Link\n            className=\"btn\"\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            to=\"/\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              // marginRight: \"5rem\",\n              // marginLeft: \"0.75rem\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n              align: \"center\",\n              width: \"9rem\",\n            }}\n          >\n            Go to Groceries\n          </Link>\n        </GridItem>\n      </GridContainer>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={8} container justify=\"center\">\n          <Paper className={classes.paper}>\n            <form onSubmit={placeOrderHandler}>\n              {/* <Grid container>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\">Shipping Details</Typography>\n                  <Divider />\n                </Grid>\n\n                <Grid item xs={12} style={{ margin: \".5rem\" }}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={3}>\n                          <Typography variant=\"body1\">Address</Typography>\n                        </Grid>\n                        <Grid item xs={9}>\n                          <Typography variant=\"body1\">\n                            {cart.shippingAddress.address}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={3}>\n                          <Typography variant=\"body1\">City</Typography>\n                        </Grid>\n                        <Grid item xs={9}>\n                          <Typography variant=\"body1\">\n                            {\" \"}\n                            {cart.shippingAddress.city}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={3}>\n                          <Typography variant=\"body1\">Postal Code</Typography>\n                        </Grid>\n                        <Grid item xs={9}>\n                          <Typography variant=\"body1\">\n                            {cart.shippingAddress.postalCode}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Divider /> */}\n              <Grid container>\n                <Grid item xs={12}>\n                  {cart.cartItems.length === 0 ? (\n                    <Message>Your cart is empty</Message>\n                  ) : (\n                    <Grid conatiner>\n                      <GridItem xs={12} sm={12} md={12}>\n                        <StepperScreen currentStep=\"3\" />\n                      </GridItem>\n                      <Grid container>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\">Shipping Details</Typography>\n                          <Divider />\n                        </Grid>\n                        <Grid item xs={12} style={{ margin: \".5rem\" }}>\n                          <Grid container>\n                            <Grid item xs={12}>\n                              <Grid container>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">\n                                    Address\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                  <Typography variant=\"body1\">\n                                    {cart.shippingAddress.address}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Grid container>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">City</Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                  <Typography variant=\"body1\">\n                                    {\" \"}\n                                    {cart.shippingAddress.city}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Grid container>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">\n                                    Postal Code\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                  <Typography variant=\"body1\">\n                                    {cart.shippingAddress.postalCode}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\">Order Details</Typography>\n                        <Divider />\n                      </Grid>\n                      {cart.cartItems.map((item, index) => (\n                        <Grid item key={index} style={{ margin: \".5rem\" }}>\n                          <Grid container>\n                            <Grid item xs={3}>\n                              <img\n                                className=\"img-thumbnail\"\n                                src={item.imageUrl}\n                                alt={item.name}\n                                style={{\n                                  height: \"3.5rem\",\n                                  width: \"3.5rem\",\n                                  marginRight: \"5rem\",\n                                }}\n                              />\n                            </Grid>\n                            <Grid item xs={9}>\n                              <Grid container>\n                                <Grid\n                                  item\n                                  xs={3}\n                                  style={{\n                                    justify: \"center\",\n                                    alignContent: \"center\",\n                                    marginRight: \"5rem\",\n                                    marginTop: \"1rem\",\n                                  }}\n                                >\n                                  <Link to={`/product/${item.product}`}>\n                                    <Typography variant=\"body1\">\n                                      {item.name}\n                                    </Typography>\n                                  </Link>\n                                </Grid>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">\n                                    {item.quantityOrdered} X{\" \"}\n                                    {/* </Typography> */}\n                                    <Icon classes={{ root: classes.iconRoot }}>\n                                      <img\n                                        alt=\"curency inr\"\n                                        src={rupeeSvgIcon}\n                                        className={classes.imageIcon}\n                                      />\n                                    </Icon>\n                                    {item.unitPrice}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={1}>\n                                  <Typography variant=\"body1\">=</Typography>\n                                </Grid>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">\n                                    <Icon classes={{ root: classes.iconRoot }}>\n                                      <img\n                                        alt=\"curency inr\"\n                                        src={rupeeSvgIcon}\n                                        className={classes.imageIcon}\n                                      />\n                                    </Icon>\n\n                                    {item.quantityOrdered * item.unitPrice}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                          <Divider />\n                        </Grid>\n                      ))}\n                      <Grid item xs={12}>\n                        <Grid container>\n                          <Grid item xs={12}>\n                            <Typography variant=\"h6\">\n                              Payment Details\n                              <Divider />\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={3}>\n                            <Typography variant=\"body1\">\n                              Payment Method\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={9}>\n                            <Typography variant=\"body1\">\n                              {cart.paymentMethod}\n                            </Typography>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </form>\n          </Paper>\n        </Grid>\n        <Grid item xs={4} container justify=\"center\">\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\">Order Summary</Typography>\n            <Divider />\n            <Grid container spacing={1} row justify=\"center\">\n              <Grid item xs={12} justify=\"center\">\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Items Cost</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {cart.itemsPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Divider />\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Shipping Cost</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {cart.shippingPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Tax</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {cart.taxPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Total</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {cart.totalPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </Grid>\n              <Grid item xs={12} align=\"center\">\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  onClick={placeOrderHandler}\n                  disabled={cart.cartItems === 0}\n                  justify=\"center\"\n                  fullWidth\n                >\n                  Place Order\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CartLayoutScreen.js",["425","426","427","428","429","430","431","432","433","434","435","436","437","438","439"],"import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addToCart,\r\n  fetchUpdatedCartItemsCount,\r\n  removeFromCart,\r\n  editCartItems,\r\n} from \"../actions/cartAction\";\r\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\r\n// import imagePath from \"../assets/images/products/edible-oils/Edible-Oils-2.jpg\";\r\nimport {\r\n  useMediaQuery,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Icon,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  DialogActions,\r\n  ButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport GridContainer from \"../components/Grid/GridContainer\";\r\nimport GridItem from \"../components/Grid/GridItem\";\r\nimport Card from \"./Card/Card\";\r\nimport CardHeader from \"./Card/CardHeader\";\r\nimport CardBody from \"./Card/CardBody\";\r\nimport ProductScreen from \"./ProductScreen\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(12, 1fr)\",\r\n    gridGap: theme.spacing(3),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: \"nowrap\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  childPaper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: \"nowrap\",\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  imageIcon: {\r\n    height: \"60%\",\r\n  },\r\n  iconRoot: {\r\n    textAlign: \"center\",\r\n  },\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\",\r\n    },\r\n  },\r\n  cardTitleGreen: {\r\n    color: \"#26A541\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontFamily: \"Roboto\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: 500,\r\n    textTransform: \"capitalize\",\r\n    textAlign: \"left\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CartLayoutScreen({ match, location, history }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n\r\n  const productId = match.params.id;\r\n  const searchStringArray = location.search.split(\"&\");\r\n  let qty, uom, order;\r\n  searchStringArray.forEach(function (item) {\r\n    var tempField = item.split(\"=\");\r\n    switch (tempField[0]) {\r\n      case \"?qty\":\r\n        qty = Number(tempField[1]);\r\n        break;\r\n      case \"uom\":\r\n        uom = tempField[1];\r\n        break;\r\n      case \"order\":\r\n        order = tempField[1];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n  // const [qtyCounter, setQtyCounter] = useState(() => qty);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    console.log(\"Clicked handleClickOpen\" + order);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // const handleIncrement = () => {\r\n  //   setQtyCounter((prevCnt) => prevCnt + 1);\r\n  // };\r\n\r\n  // const handleDecrement = () => {\r\n  //   setQtyCounter((prevCnt) => prevCnt - 1);\r\n  // };\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty, uom, order));\r\n      // dispatch(fetchUpdatedCartItemsCount());\r\n    }\r\n  }, [dispatch, productId, uom, order]);\r\n\r\n  const removeFromCartHandler = (id, indx) => {\r\n    console.log(\"Id :\" + id);\r\n    dispatch(removeFromCart(id, indx));\r\n  };\r\n  const editCartHandler = (id) => {\r\n    console.log(\"Editing \" + id);\r\n    dispatch(editCartItems(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  const renderDialog = (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\">Edit Cart Item</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          You can set my maximum width and whether to adapt or not.\r\n        </DialogContentText>\r\n        {/* <ProductScreen /> */}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Link\r\n            className=\"btn\"\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            to=\"/\"\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"#26A541\",\r\n              marginTop: \"1rem\",\r\n              marginBottom: \"1rem\",\r\n              align: \"center\",\r\n              width: \"9rem\",\r\n            }}\r\n          >\r\n            Go to Groceries\r\n          </Link>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Cart Items</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {cartItems.length === 0 ? (\r\n                <div>Empty Cart</div>\r\n              ) : (\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={8}>\r\n                    <Paper className={classes.childPaper}>\r\n                      {cartItems.map((item, index) => (\r\n                        <>\r\n                          <Grid\r\n                            container\r\n                            spacing={1}\r\n                            key={item.id + \"-\" + index}\r\n                          >\r\n                            <Grid item xs={2}>\r\n                              <img\r\n                                alt=\"Staples\"\r\n                                style={{\r\n                                  height: \"3.5rem\",\r\n                                  width: \"3.5rem\",\r\n                                }}\r\n                                src={item.imageUrl}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={8}>\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12} variant=\"alignLeft\">\r\n                                  <Typography variant=\"body1\">\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Grid container spacing={1}>\r\n                                    <Grid item xs={4}>\r\n                                      <Typography variant=\"body1\">\r\n                                        <Icon\r\n                                          classes={{ root: classes.iconRoot }}\r\n                                        >\r\n                                          <img\r\n                                            alt=\"curency inr\"\r\n                                            src={rupeeSvgIcon}\r\n                                            className={classes.imageIcon}\r\n                                          />\r\n                                        </Icon>\r\n                                        {item.unitPrice}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                      <Typography variant=\"body2\">\r\n                                        UOM : {item.uom}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                      <Typography variant=\"body1\">\r\n                                        Qty :{item.quantityOrdered}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                              <Form.Control\r\n                                as=\"select\"\r\n                                value={item.quantityOrdered}\r\n                                onChange={(e) => {\r\n                                  dispatch(removeFromCart(item.product, index));\r\n                                  dispatch(\r\n                                    addToCart(\r\n                                      item.product,\r\n                                      Number(e.target.value),\r\n                                      item.uom,\r\n                                      item.order\r\n                                    )\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {[...Array(item.countInStock).keys()].map(\r\n                                  (x) => (\r\n                                    <option key={x + 1} value={x + 1}>\r\n                                      {x + 1}\r\n                                    </option>\r\n                                  )\r\n                                )}\r\n                              </Form.Control>\r\n                            </Grid>\r\n                            {/* <Grid item xs={1}>\r\n                              <ButtonGroup\r\n                                size=\"small\"\r\n                                aria-label=\"small outlined button group\"\r\n                              >\r\n                                <Button onClick={handleIncrement}>+</Button>\r\n                                {qtyCounter && (\r\n                                  <Button disabled>{qtyCounter}</Button>\r\n                                )}\r\n                                {qtyCounter && (\r\n                                  <Button onClick={handleDecrement}>-</Button>\r\n                                )}\r\n                              </ButtonGroup>\r\n                            </Grid> */}\r\n\r\n                            <Grid item xs={1}>\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={() =>\r\n                                  removeFromCartHandler(item.product, index)\r\n                                }\r\n                              >\r\n                                <DeleteOutline />\r\n                              </IconButton>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider />\r\n                        </>\r\n                      ))}\r\n                    </Paper>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Paper className={classes.paper}>\r\n                      <Grid container spacing={1} data-aos=\"fade-up\">\r\n                        <Grid item xs={12}>\r\n                          <Typography\r\n                            variant=\"h6\"\r\n                            color=\"primary\"\r\n                            align={isMd ? \"left\" : \"center\"}\r\n                          >\r\n                            Subtotal (\r\n                            {cartItems.reduce(\r\n                              (acc, item) => acc + item.quantityOrdered,\r\n                              0\r\n                            )}\r\n                            ) items\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Icon classes={{ root: classes.iconRoot }}>\r\n                            <img\r\n                              alt=\"curency inr\"\r\n                              src={rupeeSvgIcon}\r\n                              className={classes.imageIcon}\r\n                            />\r\n                          </Icon>\r\n                          {cartItems\r\n                            .reduce(\r\n                              (acc, item) =>\r\n                                acc + item.quantityOrdered * item.unitPrice,\r\n                              0\r\n                            )\r\n                            .toFixed(2)}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Button\r\n                            disabled={cartItems.length === 0}\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            onClick={checkoutHandler}\r\n                          >\r\n                            Proceed To Checkout\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {renderDialog}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\PaymentScreen.js",["440","441"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../components/Grid/GridContainer\";\nimport GridItem from \"../components/Grid/GridItem\";\nimport Card from \"./Card/Card\";\nimport CardHeader from \"./Card/CardHeader\";\nimport CardBody from \"./Card/CardBody\";\nimport StepperScreen from \"./StepperScreen\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  paper: {\n    height: \"100%\",\n    width: \"100vh\",\n    padding: \"2rem\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleGreen: {\n    color: \"#26A541\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontFamily: \"Roboto\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    textTransform: \"capitalize\",\n    textAlign: \"left\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n}));\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const classes = useStyles();\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n  const handleChange = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const [paymentMethod, setPaymentMethod] = useState(\"gpay\");\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Link\n            className=\"btn\"\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            to=\"/\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n              align: \"center\",\n              width: \"9rem\",\n            }}\n          >\n            Go to Groceries\n          </Link>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <StepperScreen currentStep=\"2\" />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Payment Details</h4>\n            </CardHeader>\n            <CardBody>\n              <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12} container justify=\"center\">\n                  <Paper className={classes.paper}>\n                    <form onSubmit={submitHandler}>\n                      <Grid item xs={12} container>\n                        <RadioGroup\n                          aria-label=\"payment\"\n                          name=\"payment\"\n                          value={paymentMethod}\n                          onChange={handleChange}\n                        >\n                          <FormControlLabel\n                            value=\"gpay\"\n                            control={<Radio />}\n                            label=\"G-Pay\"\n                          />\n                          <FormControlLabel\n                            value=\"upi\"\n                            control={<Radio />}\n                            label=\"UPI payment\"\n                          />\n                        </RadioGroup>\n                      </Grid>\n                      <Grid item xs={12} container justify=\"center\">\n                        <Button\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                        >\n                          Continue\n                        </Button>\n                      </Grid>\n                    </form>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default PaymentScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\UserEditScreen.js",["442","443","444","445","446","447","448","449"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { getUserDetails, updateUser } from \"../actions/userAction\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <h3>User Edit Screen</h3>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Header.js",["450","451","452","453","454","455","456","457","458","459","460","461"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { logout } from \"../actions/userAction\";\r\nimport ZipCodeTracker from \"./ZipCodeTracker\";\r\nimport logo from \"../assets/images/logo.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  appTitle: {\r\n    fontSize: \"1.75rem\",\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    loginBtn: {\r\n      color: \"#2874f0\",\r\n      fontWeight: \"500\",\r\n      backgroundColor: \"#fff\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"2px\",\r\n      height: \"32px\",\r\n      padding: \"5px 40px\",\r\n      border: \"1px solid #dbdbdb\",\r\n    },\r\n  },\r\n}));\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default function Header({ props }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ElevationScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar disableGutters={true}>\r\n            <div>\r\n              <img\r\n                className=\"img-thumbnail\"\r\n                alt=\"Staples\"\r\n                src={logo}\r\n                style={{\r\n                  height: \"3.5rem\",\r\n                  width: \"3.5rem\",\r\n                  marginRight: \"5em\",\r\n                }}\r\n              />\r\n            </div>\r\n            <Link to=\"/\">\r\n              <span className={classes.appTitle}>\r\n                <b>\r\n                  <i>\r\n                    <h5>Tagline Traders</h5>\r\n                  </i>\r\n                </b>\r\n              </span>\r\n            </Link>\r\n            <div className={classes.grow} />\r\n            {/* IMPLEMENT GRID HERE TO ENSURE THE ELEMENBTS ARE PLACED ALIGNED CENTER AND HAVING SPACE IN BETWEEN -KSP */}\r\n            <Grid container fluid>\r\n              <Grid item xs={3}>\r\n                {\" \"}\r\n                <ZipCodeTracker />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {\" \"}\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {userInfo ? (\r\n                  <>\r\n                    <Link to=\"/profile\">\r\n                      <div>{userInfo.name}</div>\r\n                    </Link>\r\n                    <Link to=\"/logout\">\r\n                      <div\r\n                        onClick={logoutHandler}\r\n                        style={{ marginLeft: \"1.5em\" }}\r\n                      >\r\n                        Logout\r\n                      </div>\r\n                    </Link>\r\n                  </>\r\n                ) : (\r\n                  <div>\r\n                    <Link to=\"/login\">\r\n                      <i className=\"fas fa-user\" />\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {\" \"}\r\n                <Link to=\"/login\">\r\n                  <i className=\"fas fa-user\" />\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ marginLeft: \"5em\" }}>\r\n              <ZipCodeTracker />\r\n            </div>\r\n            <Link to=\"/cart\">\r\n              <ShoppingCartIcon count=\"10\" />\r\n            </Link>\r\n            {userInfo ? (\r\n              <>\r\n                <Link to=\"/profile\">\r\n                  <div style={{ marginRight: \"1.5em\" }}>{userInfo.name}</div>\r\n                </Link>\r\n                <Link to=\"/logout\" style={{ marginRight: \"1.5em\" }}>\r\n                  <div onClick={logoutHandler} style={{ marginLeft: \"1.5em\" }}>\r\n                    Logout\r\n                  </div>\r\n                </Link>\r\n              </>\r\n            ) : (\r\n              <Link to=\"/login\">\r\n                <i className=\"fas fa-user\" />\r\n              </Link>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductCreateScreen.js",["462"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"./Message\";\nimport Spinner from \"./controls/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport GridItem from \"./Grid/GridItem.js\";\nimport GridContainer from \"./Grid/GridContainer.js\";\nimport Card from \"./Card/Card.js\";\nimport CardHeader from \"./Card/CardHeader.js\";\nimport CardBody from \"./Card/CardBody.js\";\n\nimport { createProduct } from \"../actions/productAction\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { listCategories } from \"../actions/categoryAction\";\n\nconst ProductCreateScreen = ({ history, match }) => {\n  const useStyles = makeStyles(() => ({\n    root: {\n      flexGrow: 0,\n      padding: 1,\n      marginTop: \"1rem\",\n      marginBottom: \"1rem\",\n      display: \"flex\",\n      flexDirection: \"inherit\",\n      alignItems: \"center\",\n      height: \"30rem\",\n      width: \"30rem\",\n    },\n    inputText: {\n      margin: \"auto\",\n      padding: \"1rem\",\n      alignContent: \"center\",\n    },\n\n    input: {\n      \"&::placeholder\": {\n        color: \"gray\",\n        fontSize: \"0.85rem\",\n        fontWeight: 500,\n        fontFamily: \"Roboto\",\n      },\n      color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n    },\n    cardCategoryWhite: {\n      \"&,& a,& a:hover,& a:focus\": {\n        color: \"rgba(255,255,255,.62)\",\n        margin: \"0\",\n        fontSize: \"14px\",\n        marginTop: \"0\",\n        marginBottom: \"0\",\n      },\n      \"& a,& a:hover,& a:focus\": {\n        color: \"#FFFFFF\",\n      },\n    },\n    cardTitleGreen: {\n      color: \"#26A541\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontFamily: \"Roboto\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\",\n      fontSize: \"1rem\",\n      fontWeight: 500,\n      textTransform: \"capitalize\",\n      textAlign: \"left\",\n      \"& small\": {\n        color: \"#777\",\n        fontSize: \"65%\",\n        fontWeight: \"400\",\n        lineHeight: \"1\",\n      },\n    },\n  }));\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n\n  const [categorySelected, setCategorySelected] = useState(() => \"\");\n\n  // const [subCategories, setSubCategories] = useState(() => []);\n  const [subCategorySelected, setSubCategorySelected] = useState(() => \"\");\n  const [countInStock, setCountInStock] = useState(() => 0);\n  const [isTaxble, setIsTaxble] = useState(() => \"false\");\n  const [taxPercent, setTaxPercent] = useState(() => 0.0);\n  const [description, setDescription] = useState(() => \"\");\n\n  const dispatch = useDispatch();\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const { loading, error, product, success } = productCreate;\n\n  useEffect(() => {\n    dispatch(listCategories());\n  }, [dispatch]);\n  const categoryList = useSelector((state) => state.categoryList);\n  const { categories } = categoryList;\n\n  let renderCategoriesOptions = \"\";\n  if (categories && categories.length > 0) {\n    renderCategoriesOptions = categories.map((eachCategory, idx) => {\n      return (\n        <MenuItem key={idx} value={eachCategory.id}>\n          {eachCategory.name}\n        </MenuItem>\n      );\n    });\n  }\n  let renderSubCategoriesOptions = \"\";\n  if (categorySelected) {\n    let filteredCategory = [];\n    filteredCategory = categories.filter(function (eachCategory) {\n      return (\n        eachCategory.id === categorySelected &&\n        eachCategory.subCategories.length > 0\n      );\n    });\n    if (\n      filteredCategory[0] &&\n      filteredCategory[0].subCategories &&\n      filteredCategory[0].subCategories.length\n    ) {\n      renderSubCategoriesOptions = filteredCategory[0].subCategories.map(\n        (eachSubCategory) => {\n          return (\n            <MenuItem key={eachSubCategory.id} value={eachSubCategory.id}>\n              {eachSubCategory.name}\n            </MenuItem>\n          );\n        }\n      );\n    }\n  }\n  if (success) {\n    console.log(\"Success Response to redirecting to Products List\");\n    history.push(\"/admin/products\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(\n      \"name : \" +\n        name +\n        \" , description : \" +\n        description +\n        \" , brand : \" +\n        brand +\n        \" , countInStock : \" +\n        countInStock +\n        \" , isTaxble : \" +\n        isTaxble +\n        \" , taxPercent : \" +\n        taxPercent\n    );\n    dispatch(\n      createProduct({\n        name,\n        brand,\n        categorySelected,\n        subCategorySelected,\n        description,\n        countInStock,\n        isTaxble,\n        taxPercent,\n      })\n    );\n  };\n\n  const handleChangeCategory = (e) => {\n    setCategorySelected(() => e.target.value);\n  };\n  const handleChangeSubCategory = (e) => {\n    console.log(\"Exc handleChangeSubCategory\" + e.target.value);\n    setSubCategorySelected(e.target.value);\n  };\n\n  return (\n    <>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Link\n            className=\"btn\"\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            to=\"/admin/productlist\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n              align: \"center\",\n              width: \"9rem\",\n            }}\n          >\n            Go Back\n          </Link>\n        </GridItem>\n      </GridContainer>\n      {loading && <Spinner />}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <GridContainer spacing={1} alignItems=\"center\" justify=\"center\">\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <CardHeader color=\"primary\">\n                <h4 className={classes.cardTitleWhite}>New Product </h4>\n              </CardHeader>\n              <CardBody>\n                <form onSubmit={submitHandler}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={3}>\n                          <Typography\n                            variant=\"body1\"\n                            style={{\n                              alignItems: \"right\",\n                              justify: \"right\",\n                              marginLeft: \"5rem\",\n                            }}\n                          >\n                            Category{\" \"}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                          <Select\n                            value={categorySelected}\n                            onChange={handleChangeCategory}\n                            placeholder=\"Category\"\n                            style={{ width: \"10rem\" }}\n                          >\n                            {/* {renderCategories} */}\n                            {renderCategoriesOptions}\n                          </Select>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={3}>\n                          <Typography\n                            variant=\"body1\"\n                            style={{\n                              alignItems: \"right\",\n                              justify: \"right\",\n                              marginLeft: \"5rem\",\n                            }}\n                          >\n                            Sub Category{\" \"}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                          <Select\n                            value={subCategorySelected}\n                            onChange={handleChangeSubCategory}\n                            placeholder=\"Sub Category\"\n                            style={{ width: \"10rem\" }}\n                          >\n                            {/* renderSubCategories */}\n                            {renderSubCategoriesOptions}\n                          </Select>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Name\"\n                            variant=\"outlined\"\n                            name=\"name\"\n                            onChange={(e) => setName(e.target.value)}\n                            type=\"text\"\n                            size=\"small\"\n                            value={name}\n                            fullWidth\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Description\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"description\"\n                            onChange={(e) => setDescription(e.target.value)}\n                            type=\"text\"\n                            value={description}\n                            fullWidth\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Brand\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"brand\"\n                            onChange={(e) => setBrand(e.target.value)}\n                            type=\"text\"\n                            value={brand}\n                            fullWidth\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Count In Stock\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"countInStock\"\n                            onChange={(e) => setCountInStock(e.target.value)}\n                            type=\"number\"\n                            fullWidth\n                            value={countInStock}\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Is Taxable\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"isTaxable\"\n                            onChange={(e) => setIsTaxble(e.target.value)}\n                            type=\"text\"\n                            fullWidth\n                            value={isTaxble}\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Tax Percent\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"taxPercent\"\n                            onChange={(e) => setTaxPercent(e.target.value)}\n                            type=\"number\"\n                            fullWidth\n                            value={taxPercent}\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={2}>\n                          <Button\n                            size=\"small\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                            color=\"primary\"\n                            fullWidth\n                          >\n                            Create\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </form>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      )}\n    </>\n  );\n};\n\nexport default ProductCreateScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\OrderListScreen.js",["463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478"],"import React, { useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { Link } from \"@material-ui/core\";\nimport GridItem from \"../components/Grid/GridItem.js\";\nimport GridContainer from \"../components/Grid/GridContainer.js\";\n// import Table from \"../components/Table/Table.js\";\nimport Card from \"../components/Card/Card.js\";\nimport CardHeader from \"../components/Card/CardHeader.js\";\nimport CardBody from \"../components/Card/CardBody.js\";\nimport { Table, Row, Col } from \"react-bootstrap\";\nimport Paginate from \"../components/Paginate\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport { listOrders } from \"../actions/orderAction\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleGreen: {\n    color: \"#26A541\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontFamily: \"Roboto\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    textTransform: \"capitalize\",\n    textAlign: \"left\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst OrderListScreen = ({ history, match }) => {\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listOrders());\n  }, [dispatch]);\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const handleOrderItemDetails = (id) => {\n    history.push(`/order/${id}`);\n  };\n\n  let renderOrdersContent = \"\";\n  if (orders) {\n    // console.log(\"Orders : \" + orders);\n    renderOrdersContent = (\n      <Table striped bordered hover responsive className=\"table-sm\">\n        <thead>\n          <tr>\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                Order Id\n              </Typography>\n            </th>\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                User Id\n              </Typography>\n            </th>\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                User Name\n              </Typography>\n            </th>\n\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                Total Price\n              </Typography>\n            </th>\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                Tax Price\n              </Typography>\n            </th>\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                Shipping Price\n              </Typography>\n            </th>\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                Order Date\n              </Typography>\n            </th>\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                Delivery Date\n              </Typography>\n            </th>\n            <th>\n              <Typography className={classes.cardTitleGreen} align=\"center\">\n                Details\n              </Typography>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((order) => (\n            // co nsole.log(order)\n            <tr key={order.id}>\n              <td>{order.id}</td>\n              <td>{order.userId}</td>\n              <td>{userInfo.name}</td>\n\n              <td>{order.itemsPrice}</td>\n              <td>{order.taxPrice}</td>\n              <td>{order.shippingPrice}</td>\n              <td>{order.orderDate}</td>\n              <td>{order.deliveryDate}</td>\n              <td>\n                <ListAltIcon\n                  style={{\n                    color: \"green\",\n                    // align: \"center\",\n                    // alignContent: \"center\",\n                    // alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  onClick={() => handleOrderItemDetails(order.id)}\n                />{\" \"}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    );\n  }\n  return (\n    <Fragment>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>orders </h4>\n            </CardHeader>\n            <CardBody>\n              {renderOrdersContent ? renderOrdersContent : \"\"}\n              {/* <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                  <tr>\n                    <th>\n                      <Typography\n                        className={classes.cardTitleGreen}\n                        align=\"center\"\n                      >\n                        Name\n                      </Typography>\n                    </th>\n                    <th>\n                      <Typography\n                        className={classes.cardTitleGreen}\n                        align=\"center\"\n                      >\n                        Description\n                      </Typography>\n                    </th>\n                    <th>\n                      <Typography\n                        className={classes.cardTitleGreen}\n                        align=\"center\"\n                      >\n                        Price\n                      </Typography>\n                    </th>\n                    <th>\n                      <Typography\n                        className={classes.cardTitleGreen}\n                        align=\"center\"\n                      >\n                        Brand\n                      </Typography>\n                    </th>\n                    <th>\n                      <Typography\n                        className={classes.cardTitleGreen}\n                        align=\"center\"\n                      >\n                        Action\n                      </Typography>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {orders.map((order) => (\n                    // co nsole.log(order)\n                    <tr key={order.id}>\n                      <td>{order.name}</td>\n                      <td>{order.description}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table> */}\n              {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </Fragment>\n  );\n};\n\nexport default OrderListScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\LoginScreen.js",["479","480","481","482","483","484"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { login } from \"../actions/userAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  Paper,\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { AccountCircleOutlined } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3, 2),\n    height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    height: \"45vh\",\n    width: \"60vh\",\n  },\n  inputText: {\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n\n  input: {\n    \"&::placeholder\": {\n      color: \"gray\",\n      fontSize: \"0.85rem\",\n      fontWeight: 500,\n      fontFamily: \"Roboto\",\n    },\n    color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n  },\n}));\n\nconst LoginScreen = ({ location, history }) => {\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(userName, password));\n  };\n  const handleSignUp = (e) => {\n    console.log(\"Clicked Sign Up\");\n    e.preventDefault();\n    history.push(\"/signup\");\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={2}\n        style={{\n          top: \"50%\",\n          transform: \"translateY(+50%)\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={1}>\n            <Grid item>\n              <form onSubmit={submitHandler}>\n                <Paper className={classes.paper}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h6\" align=\"center\">\n                      Tagline Traders Login{\" \"}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    {error && <Message variant=\"danger\">{error}</Message>}\n                    {loading && <Spinner />}\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    {/* <FormControl className={classes.margin}>\n                      <InputLabel htmlFor=\"input-with-icon-adornment\"></InputLabel>\n                      <Input\n                        id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <AccountCircleOutlined />\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl> */}\n                    <TextField\n                      className={classes.inputText}\n                      align=\"center\"\n                      placeholder=\"User Name\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"userName\"\n                      fullWidth\n                      onChange={(e) => setUserName(e.target.value)}\n                      type=\"text\"\n                      value={userName}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      placeholder=\"Password\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"password\"\n                      fullWidth\n                      onChange={(e) => setPassword(e.target.value)}\n                      type=\"password\"\n                      value={password}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={1}>\n                      <Grid item xs={6}>\n                        <Button\n                          style={{\n                            marginLeft: \"0.75rem\",\n                            align: \"center\",\n                            width: \"9rem\",\n                          }}\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          // onClick={submitHandler}\n                        >\n                          Sign In\n                        </Button>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Button\n                          style={{\n                            marginRight: \"0.75rem\",\n                            align: \"center\",\n                            width: \"9rem\",\n                          }}\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          onClick={handleSignUp}\n                        >\n                          Sign Up\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </form>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default LoginScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\MuiHeader.js",["485","486","487","488","489","490","491","492","493"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ZipCodeTracker from \"./ZipCodeTracker\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport logo from \"../assets/images/logo.jpg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport LoginScreen from \"../components/LoginScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userAction\";\r\nimport CustomizedBadges from \"./CustomizedBadges\";\r\nimport { FormControl, Select } from \"@material-ui/core\";\r\nimport ShoppingCartCountScreen from \"./ShoppingCartCountScreen\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    fontSize: \"20px\",\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"500\",\r\n    fontStyle: \"italic\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  appTitle: {\r\n    fontSize: \"1.75rem\",\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n\r\n  loginBtn: {\r\n    color: \"#2874f0\",\r\n    fontWeight: \"500\",\r\n    backgroundColor: \"#fff\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"2px\",\r\n    height: \"32px\",\r\n    padding: \"5px 40px\",\r\n    border: \"1px solid #dbdbdb\",\r\n  },\r\n}));\r\nconst MuiHeader = () => {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  let [alreadyLoggedIn, setAlreadyLoggedIn] = useState(\"false\");\r\n  const classes = useStyles();\r\n  const [targetUrl, setTargetUrl] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  alreadyLoggedIn = userInfo !== null ? true : false;\r\n  console.log(\"alreadyLoggedIn : \" + alreadyLoggedIn);\r\n  let [loginLogoutBtnTitle, setLoginLogoutTitle] = useState(\"\");\r\n  let [loginLogoutBtnUrl, setLoginLogoutUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.name) {\r\n      setLoginLogoutTitle(\"logout\");\r\n      setLoginLogoutUrl(\"/logout\");\r\n    } else {\r\n      setLoginLogoutTitle(\"login\");\r\n      setLoginLogoutUrl(\"/login\");\r\n    }\r\n    // loginLogoutBtnUrl = alreadyLoggedIn === true ? \"/logout\" : \"/login\";\r\n    console.log(\r\n      \"loginBtnTitle : \" +\r\n        loginLogoutBtnTitle +\r\n        \" , loginLogoutBtnUrl :\" +\r\n        loginLogoutBtnUrl\r\n    );\r\n  }, [loginLogoutBtnTitle, loginLogoutBtnUrl]);\r\n\r\n  // let loginLogoutBtnTitle = alreadyLoggedIn === true ? \"logout\" : \"login\";\r\n  // let loginLogoutBtnUrl = alreadyLoggedIn === true ? \"/logout\" : \"/login\";\r\n  // console.log(\"loginBtnTitle : \" + loginLogoutBtnTitle);\r\n  const roleOfuserInfoExist = userInfo && userInfo.role ? true : false;\r\n\r\n  const handleChange = (event) => {\r\n    console.log(\"event.target.value : \" + event.target.value);\r\n\r\n    setTargetUrl(event.target.value);\r\n    history.push(\"/admin/\" + event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleLoginLogout = () => {\r\n    loginLogoutBtnTitle = alreadyLoggedIn === true ? \"logout\" : \"login\";\r\n    console.log(\"loginLogoutBtnTitle : \" + loginLogoutBtnTitle);\r\n    if (alreadyLoggedIn) {\r\n      dispatch(logout());\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleCartItems = () => {\r\n    console.log(\"Navigating to Cart Screen from the MUI Header Handler\");\r\n    history.push(\"/showCart\");\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <Link to=\"/profile\">\r\n          <Typography variant=\"body1\" color=\"primary\">\r\n            Profile\r\n          </Typography>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>\r\n        {\" \"}\r\n        <Typography variant=\"body1\" color=\"primary\">\r\n          My account\r\n        </Typography>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  // userInfo !== null && userInfo.role !== null ? true : false;\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <div>\r\n            <img\r\n              className=\"img-thumbnail\"\r\n              alt=\"Staples\"\r\n              src={logo}\r\n              style={{\r\n                height: \"3.5rem\",\r\n                width: \"3.5rem\",\r\n                marginRight: \"5em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            noWrap\r\n            style={{ color: \"white\" }}\r\n          >\r\n            Tagline Traders Groceries\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <ZipCodeTracker />\r\n\r\n            <Button\r\n              onClick={handleLoginLogout}\r\n              className={classes.loginBtn}\r\n              value={loginLogoutBtnTitle}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              style={{\r\n                color: \"green\",\r\n                backgroundColor: \"white\",\r\n                height: \"2rem\",\r\n                margin: \"0.5rem\",\r\n                alignContent: \"center\",\r\n                verticalAlign: \"baseline\",\r\n              }}\r\n            >\r\n              {loginLogoutBtnTitle}\r\n            </Button>\r\n            <ShoppingCartCountScreen />\r\n\r\n            {roleOfuserInfoExist &&\r\n              userInfo.role &&\r\n              userInfo.role === \"ROLE_USER\" && (\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                  title={userInfo.userName}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              )}\r\n            {roleOfuserInfoExist &&\r\n              userInfo.role &&\r\n              userInfo.role === \"ROLE_ADMIN\" && (\r\n                <FormControl className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-controlled-open-select-label\"\r\n                    id=\"demo-controlled-open-select\"\r\n                    open={open}\r\n                    defaultValue={userInfo.name}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    color={classes.primary}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      padding: \"0px 0px 0px 0px\",\r\n                    }}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value={userInfo.name}>{userInfo.name}</MenuItem>\r\n                    <MenuItem value=\"Users\">users</MenuItem>\r\n                    <MenuItem value=\"products\">Products</MenuItem>\r\n                    <MenuItem value=\"orderlist\">Orders</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MuiHeader;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CategoriesSubMenuVer2.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Dashboard.js",["494","495","496","497"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Writeup from \"../components/Writeup\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BestSellingProducts from \"../components/BestSellingProducts\";\r\nimport OurProducts from \"../components/MainCategories\";\r\nimport MainCategories from \"../components/MainCategories\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: \"5rem\",\r\n    width: \"5rem\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  imageContainer: {\r\n    height: \"5rem\",\r\n    width: \"5rem\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"5rem 5rem\",\r\n    backgroundImage: `url(${\"/images/products/Chilli.jpg\"})`,\r\n  },\r\n}));\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const classes = useStyles();\r\n  history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        className={classes.root}\r\n        spacing={2}\r\n        style={{ marginBottom: \"2rem\" }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Writeup />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BestSellingProducts />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <MainCategories />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductSettingsScreen.js",["498","499","500","501","502","503","504","505"],"import {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport ProductConfigureForm from \"./ProductConfigureForm\";\nimport ProductConfigureTable from \"./ProductConfigureTable\";\n\nclass ProductSettingsScreen extends Component {\n  state = {\n    data: [],\n    editIdx: -1,\n  };\n\n  handleRemove = (i) => {\n    this.setState((state) => ({\n      data: state.data.filter((row, j) => j !== i),\n    }));\n  };\n\n  startEditing = (i) => {\n    this.setState({ editIdx: i });\n  };\n\n  stopEditing = () => {\n    this.setState({ editIdx: -1 });\n  };\n\n  handleChange = (e, name, i) => {\n    const { value } = e.target;\n    this.setState((state) => ({\n      data: state.data.map((row, j) =>\n        j === i ? { ...row, [name]: value } : row\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <Grid\n          container\n          spacing={1}\n          style={{ top: \"5%\", transform: \"translateY(+5%)\" }}\n        >\n          <Grid item xs={12}>\n            <Grid item>\n              <ProductConfigureForm\n                onSubmit={(submission) =>\n                  this.setState({\n                    data: [...this.state.data, submission],\n                  })\n                }\n              />\n            </Grid>\n            {/* </Grid> */}\n          </Grid>\n        </Grid>\n        <ProductConfigureTable\n          handleRemove={this.handleRemove}\n          startEditing={this.startEditing}\n          editIdx={this.state.editIdx}\n          stopEditing={this.stopEditing}\n          handleChange={this.handleChange}\n          data={this.state.data}\n          header={[\n            {\n              name: \"Order Type\",\n              prop: \"orderType\",\n            },\n            {\n              name: \"Unit Of Messure\",\n              prop: \"unitOfMessure\",\n            },\n\n            {\n              name: \"Selling Price\",\n              prop: \"sellingPrice\",\n            },\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nexport default ProductSettingsScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\UserListScreen.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductListScreen.js",["506","507","508","509","510","511","512"],"import React, { useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { Link } from \"@material-ui/core\";\n// import Button from \"../components/controls/Button\";\nimport GridItem from \"../components/Grid/GridItem.js\";\nimport GridContainer from \"../components/Grid/GridContainer.js\";\n// import Table from \"../components/Table/Table.js\";\nimport Card from \"../components/Card/Card.js\";\nimport CardHeader from \"../components/Card/CardHeader.js\";\nimport CardBody from \"../components/Card/CardBody.js\";\nimport { Table } from \"react-bootstrap\";\nimport Paginate from \"../components/Paginate\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productAction\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleGreen: {\n    color: \"#26A541\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontFamily: \"Roboto\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    textTransform: \"capitalize\",\n    textAlign: \"left\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst ProductListScreen = ({ history, match }) => {\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.role === \"ROLE_ADMIN\") history.push(\"/login\");\n\n    if (successCreate) {\n      history.push(\"/admin/products\");\n    } else {\n      dispatch(listProducts());\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const handleEdit = (id) => {\n    history.push(`/admin/product/${id}/edit`);\n  };\n  const handleSettings = (id) => {\n    history.push(`/admin/product-settings/${id}`);\n  };\n  const createProductHandler = (product) => {\n    history.push(\"/admin/product/new\");\n    // dispatch(createProduct(1));\n    // console.log(\"Create product Handler\");\n  };\n\n  return (\n    <>\n      {loadingDelete && <Spinner />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {loadingCreate && <Spinner />}\n      {errorCreate && <Message variant=\"info\">{errorCreate}</Message>}\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Fragment>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Button\n                style={{\n                  marginLeft: \"0.75rem\",\n                  marginTop: \"1rem\",\n                  marginBottom: \"1rem\",\n                  align: \"center\",\n                  width: \"9rem\",\n                }}\n                size=\"small\"\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                onClick={createProductHandler}\n              >\n                New product\n              </Button>\n            </GridItem>\n          </GridContainer>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Card>\n                <CardHeader color=\"primary\">\n                  <h4 className={classes.cardTitleWhite}>Products </h4>\n                </CardHeader>\n                <CardBody>\n                  <Table striped bordered hover responsive className=\"table-sm\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            ID\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Name\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Description\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Count In Stock\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Tax Percent\n                          </Typography>\n                        </th>\n                        {/* <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Is Taxable\n                          </Typography>\n                        </th> */}\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Brand\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Action\n                          </Typography>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {products.map((product) => (\n                        <tr key={product.id}>\n                          <td>{product.id}</td>\n                          <td>{product.name}</td>\n                          <td>{product.description}</td>\n                          <td>{product.countInStock}</td>\n                          <td>{product.taxPercent}</td>\n                          {/* <td>{product.isTaxable}</td> */}\n                          <td>{product.brand}</td>\n                          <td>\n                            <EditRoundedIcon\n                              style={{ color: \"green\" }}\n                              onClick={() => handleEdit(product.id)}\n                            />\n                            <DeleteOutlineIcon\n                              style={{ color: \"red\" }}\n                              // onClick={() => }\n                            />\n                            <SettingsIcon\n                              style={{ color: \"green\" }}\n                              onClick={() => handleSettings(product.id)}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                  <Paginate pages={pages} page={page} isAdmin={true} />\n                </CardBody>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </Fragment>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductEditScreen.js",["513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531"],"import axios from \"axios\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { Link } from \"react-router-dom\";\n// import Button from \"../components/controls/Button\";\nimport GridItem from \"../components/Grid/GridItem.js\";\nimport GridContainer from \"../components/Grid/GridContainer.js\";\n// import Table from \"../components/Table/Table.js\";\nimport Card from \"../components/Card/Card.js\";\nimport CardHeader from \"../components/Card/CardHeader.js\";\nimport CardBody from \"../components/Card/CardBody.js\";\nimport {\n  listProductDetailsByProductId,\n  updateProduct,\n} from \"../actions/productAction\";\nimport { Table } from \"react-bootstrap\";\nimport Paginate from \"../components/Paginate\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport {\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_RESET,\n} from \"../constants/productConstants\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productAction\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\n\nconst ProductEditScreen = ({ history, match }) => {\n  const productId = match.params.id;\n  const useStyles = makeStyles(() => ({\n    root: {\n      flexGrow: 0,\n      padding: 1,\n      marginTop: \"1rem\",\n      marginBottom: \"1rem\",\n      display: \"flex\",\n      flexDirection: \"inherit\",\n      // justifyContent: \"center\",\n      // alignContent: \"center\",\n      alignItems: \"center\",\n      height: \"30rem\",\n      width: \"30rem\",\n    },\n    inputText: {\n      margin: \"auto\",\n      padding: \"1rem\",\n      alignContent: \"center\",\n    },\n\n    input: {\n      \"&::placeholder\": {\n        color: \"gray\",\n        fontSize: \"0.85rem\",\n        fontWeight: 500,\n        fontFamily: \"Roboto\",\n      },\n      color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n    },\n    cardCategoryWhite: {\n      \"&,& a,& a:hover,& a:focus\": {\n        color: \"rgba(255,255,255,.62)\",\n        margin: \"0\",\n        fontSize: \"14px\",\n        marginTop: \"0\",\n        marginBottom: \"0\",\n      },\n      \"& a,& a:hover,& a:focus\": {\n        color: \"#FFFFFF\",\n      },\n    },\n    cardTitleGreen: {\n      color: \"#26A541\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontFamily: \"Roboto\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\",\n      fontSize: \"1rem\",\n      fontWeight: 500,\n      textTransform: \"capitalize\",\n      textAlign: \"left\",\n      \"& small\": {\n        color: \"#777\",\n        fontSize: \"65%\",\n        fontWeight: \"400\",\n        lineHeight: \"1\",\n      },\n    },\n  }));\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetailsByProductId = useSelector(\n    (state) => state.productDetailsByProductId\n  );\n  const { loading, error, product } = productDetailsByProductId;\n  // const productUpdate = useSelector((state) => state.productUpdate);\n  // const {\n  //   loading: loadingUpdate,\n  //   error: errorUpdate,\n  //   success: successUpdate,\n  // } = productUpdate;\n  useEffect(() => {\n    if (product.id !== productId) {\n      console.log(\"!product.name || product.id !== productId\");\n      dispatch(listProductDetailsByProductId(productId));\n    } else {\n      console.log(\"Exec Else of !product.name || product.id !== productId\");\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setBrand(product.brand);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setDescription(product.description);\n    }\n  }, [dispatch, history, productId]);\n\n  // const uploadFileHandler = async (e) => {\n  //   const file = e.target.files[0];\n  //   const formData = new FormData();\n  //   formData.append(\"image\", file);\n  //   setUploading(true);\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         \"Content-Type\": \"multipart/form-data\",\n  //       },\n  //     };\n\n  //     const { data } = await axios.post(\"/api/upload\", formData, config);\n\n  //     setImage(data);\n  //     setUploading(false);\n  //   } catch (error) {\n  //     console.error(error);\n  //     setUploading(false);\n  //   }\n  // };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch(\n    //   updateProduct({\n    //     _id: productId,\n    //     name,\n    //     price,\n    //     image,\n    //     brand,\n    //     category,\n    //     description,\n    //     countInStock,\n    //   })\n    // );\n  };\n  return (\n    <>\n      {/* {loadingUpdate && <Spinner />}\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>} */}\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Fragment>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Link\n                className=\"btn\"\n                size=\"small\"\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                to=\"/admin/productlist\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#26A541\",\n                  marginTop: \"1rem\",\n                  marginBottom: \"1rem\",\n                  align: \"center\",\n                  width: \"9rem\",\n                }}\n              >\n                Go Back\n              </Link>\n            </GridItem>\n          </GridContainer>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Card>\n                <CardHeader color=\"primary\">\n                  <h4 className={classes.cardTitleWhite}>Edit Product </h4>\n                </CardHeader>\n                <CardBody>\n                  <form onSubmit={submitHandler}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Name\"\n                              variant=\"outlined\"\n                              name=\"name\"\n                              onChange={(e) => setName(e.target.value)}\n                              type=\"text\"\n                              size=\"small\"\n                              value={name}\n                              fullWidth\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Description\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"description\"\n                              onChange={(e) => setDescription(e.target.value)}\n                              type=\"text\"\n                              value={description}\n                              fullWidth\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          // direction=\"column\"\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Brand\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"brand\"\n                              onChange={(e) => setBrand(e.target.value)}\n                              type=\"text\"\n                              value={brand}\n                              fullWidth\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Count In Stock\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"countInStock\"\n                              onChange={(e) => setCountInStock(e.target.value)}\n                              type=\"text\"\n                              fullWidth\n                              value={countInStock}\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Category\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"category\"\n                              onChange={(e) => setCategory(e.target.value)}\n                              type=\"text\"\n                              value={category}\n                              fullWidth\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Enter Image Url\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"image\"\n                              onChange={(e) => setImage(e.target.value)}\n                              type=\"text\"\n                              fullWidth\n                              value={image}\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                            <file\n                              id=\"image-file\"\n                              label=\"Choose File\"\n                              // custom\n                              // onChange={uploadFileHandler}\n                            ></file>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          // alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6} justify=\"center\">\n                            <Button\n                              size=\"small\"\n                              variant=\"contained\"\n                              type=\"submit\"\n                              color=\"primary\"\n                            >\n                              Update\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </form>\n                </CardBody>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </Fragment>\n      )}\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Card\\CardBody.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Card\\CardHeader.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Card\\Card.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Message.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Grid\\GridItem.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CustomizedBadges.js",["532","533","534"],"import React, { useState, useEffect } from \"react\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUpdatedCartItemsCount } from \"../actions/cartAction\";\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: \"0 4px\",\r\n  },\r\n}))(Badge);\r\n\r\nexport default function CustomizedBadges() {\r\n  const [cartItemsCount, setCartItemsCount] = useState(0);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchUpdatedCartItemsCount());\r\n    // const updatedCartItemsCount = useSelector(\r\n    //   (state) => state.cart.cartItems.updatedCartItemsCount\r\n    // );\r\n    // const { cartItemsUpdatedCount } = updatedCartItemsCount;\r\n    let cartItems = localStorage.getItem(\"cartItems\")\r\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      : [];\r\n    console.log(\"cartItemsExist : \" + cartItems.length);\r\n    // setCartItemsCount(cartItemsUpdatedCount);\r\n  }, []);\r\n\r\n  const updatedCartItemsCount = useSelector(\r\n    (state) => state.cart.cartItems.updatedCartItemsCount\r\n  );\r\n  // const { cartItemsUpdatedCount } = updatedCartItemsCount;\r\n  // setCartItemsCount(updatedCartItemsCount);\r\n\r\n  return (\r\n    <IconButton aria-label=\"cart\">\r\n      <StyledBadge badgeContent={updatedCartItemsCount} color=\"secondary\">\r\n        <ShoppingCartIcon />\r\n      </StyledBadge>\r\n    </IconButton>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ShoppingCartCountScreen.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Grid\\GridContainer.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductOverview.js",["535","536","537","538"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport test_product_image from \"../assets/images/products/Vaishnavi.jpeg\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Image from \"./atoms/Image/Image\";\r\n\r\nconst ProductOverview = ({ match, product, categoryId }) => {\r\n  const history = useHistory();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    imageIcon: {\r\n      height: \"100%\",\r\n    },\r\n    paper: {\r\n      height: \"90%\",\r\n      width: \"100vh\",\r\n      padding: \".5rem\",\r\n    },\r\n    iconRoot: {\r\n      textAlign: \"center\",\r\n    },\r\n    newButton: {\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n    },\r\n    image: {\r\n      objectFit: \"contain\",\r\n      height: 120,\r\n    },\r\n    fontWeightBold: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    cardMedia: {\r\n      padding: theme.spacing(2, 2, 0, 2),\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    addButton: {\r\n      width: \"100%\",\r\n      // padding: 14px 28px;\r\n      // font-size: 16px;\r\n      cursor: \"pointer\",\r\n      // text-align: center;\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const addToCartHandler = () => {\r\n    console.log(\"Clicked Add to Cart Handler\");\r\n    history.push(`/product/${product.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card raised={2}>\r\n        <CardMedia className={classes.cardMedia}>\r\n          <Image\r\n            src={product.imageurl}\r\n            alt={product.name}\r\n            className={classes.image}\r\n          />\r\n        </CardMedia>\r\n        <CardContent>\r\n          <Grid container spacing={2} align=\"center\">\r\n            <Grid item xs={12}>\r\n              <Typography color=\"textPrimary\" variant=\"subtitle1\" align=\"left\">\r\n                {product.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"subtitle1\"\r\n                className={classes.fontWeightBold}\r\n                align=\"right\"\r\n              ></Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2} align=\"center\">\r\n            <Grid item xs={12} align=\"center\">\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n                onClick={() => {\r\n                  addToCartHandler();\r\n                }}\r\n                disabled={product.countInStock === 0}\r\n              >\r\n                Add to cart\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductOverview;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ZipCodeTracker.js",["539"],"import React from \"react\";\r\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport $ from \"jquery\";\r\nconst ZipCodeTracker = () => {\r\n  const getCurrentLocationZipCode = () => {\r\n    let latitude = 0.0;\r\n    let longitude = 0.0;\r\n    const KEY = \"AIzaSyDt-KMX0JInMJHvQ55xBfCGE0YkXh4P7Ys\";\r\n    const errorCB = (err) => {\r\n      console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    };\r\n    const successCB = (pos) => {\r\n      let crd = pos.coords;\r\n      console.log(`Latitude : ${crd.latitude} Longitude: ${crd.longitude}`);\r\n      latitude = `${crd.latitude}`;\r\n      longitude = `${crd.longitude}`;\r\n      const URL = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${KEY}`;\r\n      console.log(\r\n        `Now Fetching the Zip Code for  ${crd.latitude} Longitude: ${crd.longitude} `\r\n      );\r\n\r\n      fetch(URL)\r\n        .then((response) => response.json())\r\n        .then((results) => {\r\n          console.log(results);\r\n          const zip_code = results.results[0].address_components.find(\r\n            (addr) => addr.types[0] === \"postal_code\"\r\n          ).short_name;\r\n          console.log(\"zip_code : \" + zip_code);\r\n          $(\"#zip_code\").html(\"Deliver to \" + zip_code);\r\n        });\r\n    };\r\n    const accuracyOptions = {\r\n      enableHighAccuracy: true,\r\n    };\r\n    navigator.geolocation.getCurrentPosition(\r\n      successCB,\r\n      errorCB,\r\n      accuracyOptions\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"flex\">\r\n      <RoomOutlinedIcon\r\n        onClick={() => {\r\n          getCurrentLocationZipCode();\r\n        }}\r\n      />\r\n      <div id=\"zip_code\" style={{ fontSize: \"0.85rem\" }}>\r\n        Search city\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZipCodeTracker;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Paginate.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\controls\\Spinner.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\MainCategories.js",["540","541","542","543"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ButtonBase, Card } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listCategories } from \"../actions/categoryAction\";\r\nimport Message from \"./Message\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 130,\r\n    width: 130,\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center 40%\",\r\n  },\r\n  imageBackdrop: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    // backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n  imageTitle: {\r\n    position: \"relative\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\r\n      theme.spacing(1) + 6\r\n    }px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: \"absolute\",\r\n    bottom: -2,\r\n    left: \"calc(50% - 9px)\",\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n}));\r\n\r\nexport default function MainCategories() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let renderMainCategories;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n  }, [dispatch]);\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading, error, categories } = categoryList;\r\n  console.log(categories);\r\n  let tempImgUrl = \"\";\r\n\r\n  if (categories && categories.length > 0) {\r\n    renderMainCategories = (\r\n      <Grid container className={classes.root} spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={6}>\r\n            {categories.map((item, index) => (\r\n              <Grid item key={item.id}>\r\n                {\r\n                  console.log(\r\n                    \"Each Item Id : \" +\r\n                      item.id +\r\n                      \", Category Name : \" +\r\n                      item.imageurl\r\n                  )\r\n                  // tempImgUrl = item.imageurl;\r\n                }\r\n                <Card className={classes.paper} spacing={1}>\r\n                  <ButtonBase\r\n                    focusRipple\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    onClick={() => {\r\n                      console.log(\r\n                        \"Clicked category : \" +\r\n                          item.id +\r\n                          \" Category Name : \" +\r\n                          item.name\r\n                      );\r\n                      history.push(`/category/${item.id}`);\r\n                    }}\r\n                    style={{\r\n                      width: \"130\",\r\n                      height: \"130\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      className=\"img-thumbnail\"\r\n                      alt=\"Staples\"\r\n                      src={item.imageurl}\r\n                      style={{\r\n                        width: \"130\",\r\n                        height: \"130\",\r\n                      }}\r\n                    />\r\n\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}></span>\r\n                  </ButtonBase>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  } else {\r\n    renderMainCategories = <Message>No Records Found for Categories: </Message>;\r\n  }\r\n  return <>{renderMainCategories}</>;\r\n}\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductConfigureTable.js",["544","545","546","547","548"],"import React from \"react\";\r\nimport { Button, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\r\n// import Table from \"@material-ui/core/Table\";\r\nimport { Table } from \"react-bootstrap\";\r\n// import ttbody from \"@material-ui/core/ttbody\";\r\n// import td from \"@material-ui/core/td\";\r\n// import tr from \"@material-ui/core/tr\";\r\n// import TableRowColumn from \"@material-ui/core;\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\n// import EditIcon from \"material-ui/svg-icons/image/edit\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n// import DeleteOutlineIcon from \"material-ui/svg-icons/action/delete\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\n// import DoneOutlineIcon from \"material-ui/svg-icons/navigation/check\";\r\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\r\nimport GridContainer from \"./Grid/GridContainer\";\r\nimport GridItem from \"./Grid/GridItem\";\r\nimport Card from \"./Card/Card\";\r\nimport CardHeader from \"./Card/CardHeader\";\r\nimport CardBody from \"./Card/CardBody\";\r\n\r\nconst cardTitleGreen = {\r\n  color: \"#26A541\",\r\n  marginTop: \"0px\",\r\n  minHeight: \"auto\",\r\n  fontFamily: \"Roboto\",\r\n  marginBottom: \"3px\",\r\n  textDecoration: \"none\",\r\n  fontSize: \"1rem\",\r\n  fontWeight: 500,\r\n  textTransform: \"capitalize\",\r\n  textAlign: \"left\",\r\n  \"& small\": {\r\n    color: \"#777\",\r\n    fontSize: \"65%\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1\",\r\n  },\r\n};\r\nconst row = (\r\n  x,\r\n  i,\r\n  header,\r\n  handleRemove,\r\n  startEditing,\r\n  editIdx,\r\n  handleChange,\r\n  stopEditing\r\n) => {\r\n  const currentlyEditing = editIdx === i;\r\n  return (\r\n    <tr key={`tr-${i}`} selectable={false}>\r\n      {header.map((y, k) => (\r\n        <td key={`trc-${k}`}>\r\n          {currentlyEditing ? (\r\n            <TextField\r\n              name={y.prop}\r\n              onChange={(e) => handleChange(e, y.prop, i)}\r\n              value={x[y.prop]}\r\n            />\r\n          ) : (\r\n            x[y.prop]\r\n          )}\r\n        </td>\r\n      ))}\r\n      <td>\r\n        {currentlyEditing ? (\r\n          <DoneOutlineIcon onClick={() => stopEditing()} />\r\n        ) : (\r\n          <EditIcon onClick={() => startEditing(i)} />\r\n        )}\r\n      </td>\r\n      <td>\r\n        <DeleteOutlineIcon onClick={() => handleRemove(i)} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ProductConfigureTable = ({\r\n  data,\r\n  header,\r\n  handleRemove,\r\n  startEditing,\r\n  editIdx,\r\n  handleChange,\r\n  stopEditing,\r\n}) => (\r\n  <GridContainer>\r\n    <GridItem xs={12} sm={12} md={12}>\r\n      <Card>\r\n        <CardHeader color=\"primary\">\r\n          <h4 className={cardTitleGreen}>List Configuration </h4>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            {/* <thead>\r\n              <tr>\r\n                <th>\r\n                  <Typography className={cardTitleGreen} align=\"center\">\r\n                    {header.map((x, i) => (\r\n                      <td key={`thc-${i}`}>{x.name}</td>\r\n                    ))}\r\n                    <td>Edit</td>\r\n                    <td>Delete</td>\r\n                  </Typography>\r\n                </th>\r\n              </tr>\r\n            </thead> */}\r\n            <tbody>\r\n              {data.map((x, i) =>\r\n                row(\r\n                  x,\r\n                  i,\r\n                  header,\r\n                  handleRemove,\r\n                  startEditing,\r\n                  editIdx,\r\n                  handleChange,\r\n                  stopEditing\r\n                )\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </GridItem>\r\n  </GridContainer>\r\n);\r\n\r\nexport default ProductConfigureTable;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\orderAction.js",["549","550","551"],"import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from \"../constants/orderConstants\";\r\nimport { logout } from \"./userAction\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/order/${userInfo.id}`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n    localStorage.removeItem(\"paymentMethod\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetailsById = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/order/${id}`);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    /*const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };*/\r\n\r\n    const { data } = await axios.get(`/api/order/myorders`);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/order`);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\productAction.js",["552","553"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_BY_CATEGORY_ID_REQUEST,\r\n  PRODUCT_LIST_BY_CATEGORY_ID_SUCCESS,\r\n  PRODUCT_LIST_BY_CATEGORY_ID_FAIL,\r\n  PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_REQUEST,\r\n  PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_SUCCESS,\r\n  PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_LIST_BY_SUB_CATEGORY_REQUEST,\r\n  PRODUCT_LIST_BY_SUB_CATEGORY_SUCCESS,\r\n  PRODUCT_LIST_BY_SUB_CATEGORY_FAIL,\r\n  PRODUCT_DETAILS_BY_PRODUCT_ID_REQUEST,\r\n  PRODUCT_DETAILS_BY_PRODUCT_ID_SUCCESS,\r\n  PRODUCT_DETAILS_BY_PRODUCT_ID_FAIL,\r\n  PRODUCT_LIST_BEST_SELLER_REQUEST,\r\n  PRODUCT_LIST_BEST_SELLER_SUCCESS,\r\n  PRODUCT_LIST_BEST_SELLER_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport { logout } from \"./userAction\";\r\n\r\nexport const listProducts = (\r\n  productid,\r\n  keyword = \"\",\r\n  pageNumber = \"\"\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    // {`/api/subcategory/2/product/${match.params.id}`;}\r\n    const { data } = await axios.get(\"/api/subcategory/2/product\");\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(\" Response Data : \" + data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetailsByProductId = (productId) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    console.log(\"Inside listProductDetailsByProductId : \" + productId);\r\n    dispatch({ type: PRODUCT_DETAILS_BY_PRODUCT_ID_REQUEST });\r\n    const { data } = await axios.get(`/api/product/${productId}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_PRODUCT_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(\" Response Data : \" + data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_PRODUCT_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductsByCategoryId = (categoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_BY_CATEGORY_ID_REQUEST });\r\n    const { data } = await axios.get(`/api/category/${categoryId}/product`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_BY_CATEGORY_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(\" Response Data : \" + data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_BY_CATEGORY_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listProductsBySubCategoryId = (subCategoryId, productId) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_BY_SUB_CATEGORY_REQUEST });\r\n    // {`/api/subcategory/2/product/${match.params.id}`;}\r\n    const { data } = await axios.get(\r\n      `/api/subcategory/${subCategoryId}/product`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_BY_SUB_CATEGORY_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(\" Response Data : \" + data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_BY_SUB_CATEGORY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetailsBySubCategoryIdProductId = (\r\n  subCategoryId,\r\n  productId\r\n) => async (dispatch) => {\r\n  try {\r\n    console.log(\r\n      \"Inside product ACtion listProductDetailsBySubCategoryIdProductId  \" +\r\n        subCategoryId +\r\n        \"Product ID : \" +\r\n        productId\r\n    );\r\n    dispatch({ type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `/api/subcategory/${subCategoryId}/product/${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (subCategoryId, productId) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `api/subcategory/${subCategoryId}/product/${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (product) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n    console.log(product);\r\n    const {\r\n      name,\r\n      brand,\r\n      description,\r\n      countInStock,\r\n      isTaxble,\r\n      taxPercent,\r\n    } = product;\r\n    console.log(\r\n      \"name : \" +\r\n        product.name +\r\n        \" , description : \" +\r\n        product.description +\r\n        \" , brand : \" +\r\n        product.brand +\r\n        \" , countInStock : \" +\r\n        product.countInStock +\r\n        \" , isTaxable : \" +\r\n        product.isTaxable +\r\n        \" , taxPercent : \" +\r\n        product.taxPercent\r\n    );\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const { data } = await axios.post(\r\n      `/api/subcategory/${product.subCategorySelected}/product`,\r\n      {\r\n        name,\r\n        brand,\r\n        description,\r\n        countInStock,\r\n        isTaxble,\r\n        taxPercent,\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listBestSellerProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_BEST_SELLER_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/product/best-seller`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_BEST_SELLER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_BEST_SELLER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\userAction.js",["554","555"],"import axios from \"axios\";\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (userName, password) => async (dispatch) => {\r\n  console.log(\"userName : \" + userName + \", Password : \" + password);\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/user/login\",\r\n      { userName, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"cartItems\");\r\n  localStorage.removeItem(\"shippingAddress\");\r\n  localStorage.removeItem(\"paymentMethod\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  // document.location.href = \"/login\";\r\n};\r\n\r\nexport const register = (\r\n  name,\r\n  userName,\r\n  password,\r\n  emailId,\r\n  contactNo,\r\n  role\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/user\",\r\n      { name, userName, password, emailId, contactNo, role },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/user/profile/${id}`);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/user`);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\productConstants.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\categoriesMenuData.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\Writeup.js",["556","557"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    padding: 0,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 500,\r\n    justifyContent: \"center\",\r\n  },\r\n  subtitle: {\r\n    fontSize: 14,\r\n    fontWeight: 400,\r\n    justifyContent: \"center\",\r\n  },\r\n  caption: {\r\n    fontSize: 20,\r\n    fontWeight: 500,\r\n    alignItems: \"center\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cardcontent: {\r\n    padding: 0,\r\n    \"&:last-child\": {\r\n      paddingBottom: 0,\r\n    },\r\n  },\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardcontent}>\r\n        <Typography color=\"secondary\" className={classes.title} align=\"center\">\r\n          Established in the year 2007, Tagline Tarders Private Limited in\r\n          Gachibowli , Hyderabad is a top player in the category of spices in\r\n          Hyderabad.\r\n        </Typography>\r\n        <Typography color=\"secondary\" className={classes.subtitle}>\r\n          It's flagship Brands \"Vishudha Chilli, Vishudha Turmeric, Vishudha\r\n          Coriander\" ar manufactured with the latest equipement totally\r\n          untouched by Hands..\r\n        </Typography>\r\n        <Typography align=\"center\">\r\n          <span style={{ backgroundColor: \"#800000\", color: \"white\" }}>\r\n            Vishudha Chilli, Turmeric, Coriander guarantees\r\n          </span>\r\n        </Typography>\r\n        <Typography\r\n          color=\"secondary\"\r\n          className={classes.caption}\r\n          align=\"center\"\r\n        >\r\n          <span style={{ backgroundColor: \"#800000\", color: \"white\" }}>\r\n            \"The Real Aroma of Quality\"\r\n          </span>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\BestSellingProducts.js",["558","559","560"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ButtonBase, Card } from \"@material-ui/core\";\r\nimport { listBestSellerProducts } from \"../actions/productAction\";\r\n// import relativePath from \"../assets/images/products/A.2PALM 15 LTRS.jpg\";\r\n\r\nimport Message from \"./Message\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 130,\r\n    width: 130,\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center 40%\",\r\n  },\r\n  imageBackdrop: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n  imageTitle: {\r\n    position: \"relative\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\r\n      theme.spacing(1) + 6\r\n    }px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: \"absolute\",\r\n    bottom: -2,\r\n    left: \"calc(50% - 9px)\",\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n}));\r\n\r\nconst BestSellingProducts = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let renderBestSellerProducts;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listBestSellerProducts());\r\n  }, [dispatch]);\r\n  const bestSellers = useSelector((state) => state.bestSellers);\r\n  const { loading, error, bestSellerProducts } = bestSellers;\r\n  console.log(bestSellerProducts);\r\n\r\n  if (bestSellerProducts && bestSellerProducts.length > 0) {\r\n    renderBestSellerProducts = (\r\n      <Grid container className={classes.root} spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={6}>\r\n            {bestSellerProducts.map((item, index) => (\r\n              <Grid item key={item.id}>\r\n                {console.log(\r\n                  \"Each Item Id : \" +\r\n                    item.id +\r\n                    \", subCategoryId : \" +\r\n                    item.subCategory\r\n                )}\r\n                <Card className={classes.paper} spacing={1}>\r\n                  <ButtonBase\r\n                    focusRipple\r\n                    className={classes.image}\r\n                    onClick={() => {\r\n                      console.log(\r\n                        \"Clicked \" +\r\n                          item.id +\r\n                          \"ITEMS IMAGE URL \" +\r\n                          item.imageurl\r\n                      );\r\n                      history.push(`/product/${item.id}`);\r\n                    }}\r\n                    style={{\r\n                      width: \"8rem\",\r\n                      height: \"8rem\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"Staples\"\r\n                      style={{\r\n                        width: \"7rem\",\r\n                        height: \"6rem\",\r\n                      }}\r\n                      src={item.imageurl}\r\n                    />\r\n                  </ButtonBase>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  } else {\r\n    renderBestSellerProducts = (\r\n      <Message>No Records Found for Best Seller category : </Message>\r\n    );\r\n  }\r\n  return <>{renderBestSellerProducts}</>;\r\n};\r\nexport default BestSellingProducts;\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\ProductConfigureForm.js",["561","562","563","564"],"import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Grid, Input, InputBase } from \"@material-ui/core\";\r\nimport GridItem from \"./Grid/GridItem\";\r\nimport Card from \"./Card/Card\";\r\nimport CardHeader from \"./Card/CardHeader\";\r\nimport CardBody from \"./Card/CardBody\";\r\nimport GridContainer from \"./Grid/GridContainer\";\r\n\r\nconst cardTitleGreen = {\r\n  color: \"#fff\",\r\n  marginTop: \"0px\",\r\n  minHeight: \"auto\",\r\n  fontFamily: \"Roboto\",\r\n  marginBottom: \"3px\",\r\n  textDecoration: \"none\",\r\n  fontSize: \"1rem\",\r\n  fontWeight: 500,\r\n  textTransform: \"capitalize\",\r\n  textAlign: \"left\",\r\n  \"& small\": {\r\n    color: \"#777\",\r\n    fontSize: \"65%\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1\",\r\n  },\r\n};\r\n\r\nconst input = {\r\n  width: \"25rem\",\r\n  fontSize: \"0.85rem\",\r\n  fontWeight: 500,\r\n  fontFamily: \"Roboto\",\r\n  \"&::placeholder\": {\r\n    color: \"gray\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: 500,\r\n    fontFamily: \"Roboto\",\r\n  },\r\n  color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\r\n};\r\n\r\nexport default class ProductConfigureForm extends React.Component {\r\n  state = {\r\n    orderType: \"\",\r\n    orderTypeError: \"\",\r\n    unitOfMessure: \"\",\r\n    unitOfMessureError: \"\",\r\n    unitPrice: \"\",\r\n    unitPriceError: \"\",\r\n    sellingPrice: \"\",\r\n    sellingPriceError: \"\",\r\n  };\r\n\r\n  change = (e) => {\r\n    // this.props.onChange({ [e.target.name]: e.target.value });\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let isError = false;\r\n    const errors = {\r\n      orderTypeError: \"\",\r\n      unitOfMessureError: \"\",\r\n      unitPriceError: \"\",\r\n      sellingPriceError: \"\",\r\n    };\r\n\r\n    if (this.state.unitPrice.length < 5) {\r\n      isError = true;\r\n      errors.unitPriceError = \"unitPrice needs to be atleast 5 characters long\";\r\n    }\r\n\r\n    if (!this.state.sellingPrice) {\r\n      isError = true;\r\n      errors.sellingPriceError = \"Requires valid sellingPrice\";\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      ...errors,\r\n    });\r\n\r\n    return isError;\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    console.log(\"Clicked Save\");\r\n    e.preventDefault();\r\n    // const err = this.validate();\r\n    // if (!err) {\r\n    this.props.onSubmit(this.state);\r\n    // clear form\r\n    this.setState({\r\n      orderType: \"\",\r\n      orderTypeError: \"\",\r\n      unitOfMessure: \"\",\r\n      unitOfMessureError: \"\",\r\n      unitPrice: \"\",\r\n      unitPriceError: \"\",\r\n      sellingPrice: \"\",\r\n      sellingPriceError: \"\",\r\n    });\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader color=\"primary\">\r\n          <h4 style={cardTitleGreen}>Configure BULK / DOMESTIC Price</h4>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <GridContainer justify=\"center\">\r\n            {/* <Grid container justify=\"center\"> */}\r\n            <form>\r\n              <Grid item xs={12}>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <Input\r\n                      name=\"orderType\"\r\n                      style={input}\r\n                      fullWidth\r\n                      placeholder=\"Order Type\"\r\n                      value={this.state.orderType}\r\n                      onChange={(e) => this.change(e)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Input\r\n                  style={input}\r\n                  name=\"unitOfMessure\"\r\n                  placeholder=\"Unit Of Messure\"\r\n                  value={this.state.unitOfMessure}\r\n                  onChange={(e) => this.change(e)}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Input\r\n                  style={input}\r\n                  name=\"sellingPrice\"\r\n                  placeholder=\"Selling Price\"\r\n                  value={this.state.sellingPrice}\r\n                  onChange={(e) => this.change(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} style={{ marginTop: \"3rem\" }}>\r\n                <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Button\r\n                      style={{\r\n                        marginLeft: \"0.75rem\",\r\n                        align: \"center\",\r\n                        width: \"9rem\",\r\n                      }}\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      onClick={(e) => this.onSubmit(e)}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Button\r\n                      style={{\r\n                        marginLeft: \"0.75rem\",\r\n                        align: \"center\",\r\n                        width: \"9rem\",\r\n                      }}\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      onClick={(e) => this.onSubmit(e)}\r\n                    >\r\n                      Reset\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </GridContainer>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\data\\index.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\cartAction.js",["565"],"import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_ITEMS_COUNT,\r\n  CART_EDIT_ITEM,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, quantityOrdered, uom, order) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { data } = await axios.get(`/api/product/${id}`);\r\n  let updatedCartItemsCount = 0;\r\n\r\n  // if (getState().cart.cartItems.cartItemsCount) {\r\n  //   updatedCartItemsCount =\r\n  //     Number(getState().cart.cartItems.cartItemsCount) +\r\n  //     Number(quantityOrdered);\r\n  // } else {\r\n  //   updatedCartItemsCount = updatedCartItemsCount + Number(quantityOrdered);\r\n  // }\r\n  // localStorage.setItem(\"cartItemsCount\", JSON.stringify(updatedCartItemsCount));\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data.id,\r\n      name: data.name,\r\n      imageUrl: data.imageurl,\r\n      description: data.name,\r\n      // image: data.imageUrl,\r\n      // cartItemsCount: updatedCartItemsCount,\r\n      unitPrice:\r\n        order === \"Domestic\"\r\n          ? data.availableInDomestic\r\n              .filter((p) => uom === p.unitOfMessure)\r\n              .map((matchedRec) => matchedRec.sellingPrice)[0]\r\n          : data.availableInBulk\r\n              .filter((p) => uom === p.unitOfMessure)\r\n              .map((matchedRec) => matchedRec.sellingPrice)[0],\r\n      totalPrice:\r\n        order === \"Domestic\"\r\n          ? data.availableInDomestic\r\n              .filter((p) => uom === p.unitOfMessure)\r\n              .map(\r\n                (matchedRec) =>\r\n                  Number(matchedRec.unitPrice) * Number(quantityOrdered)\r\n              )[0]\r\n          : data.availableInBulk\r\n              .filter((p) => uom === p.unitOfMessure)\r\n              .map(\r\n                (matchedRec) =>\r\n                  Number(matchedRec.unitPrice) * Number(quantityOrdered)\r\n              )[0],\r\n      countInStock: data.countInStock,\r\n      quantityOrdered,\r\n      uom,\r\n      orderType: order === \"Domestic\" ? \"Domestic\" : \"Bulk\",\r\n    },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (product, index) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: { product, index },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const editCartItems = (product) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_EDIT_ITEM,\r\n    payload: product,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n\r\nexport const fetchUpdatedCartItemsCount = () => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_ITEMS_COUNT,\r\n    payload: getState().cart.cartItems.cartItemsCount,\r\n  });\r\n};\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\actions\\categoryAction.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\userConstants.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\categoryConstants.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\StepperScreen.js",["566"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ContactMailOutlinedIcon from \"@material-ui/icons/ContactMailOutlined\";\r\nimport AccountBalanceWalletOutlinedIcon from \"@material-ui/icons/AccountBalanceWalletOutlined\";\r\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: \"#eaeaf0\",\r\n    display: \"flex\",\r\n    height: 22,\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    color: \"#784af4\",\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"currentColor\",\r\n  },\r\n  completed: {\r\n    color: \"#784af4\",\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? (\r\n        <Check className={classes.completed} />\r\n      ) : (\r\n        <div className={classes.circle} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: 50,\r\n    height: 50,\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n  },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <ContactMailOutlinedIcon />,\r\n    2: <AccountBalanceWalletOutlinedIcon />,\r\n    3: <RateReviewOutlinedIcon />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Shipping Details\", \"Payment Details\", \"Review Order\"];\r\n}\r\n\r\nexport default function StepperScreen(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = props.currentStep;\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>{activeStep === steps.length ? <div></div> : <div></div>}</div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\assets\\jss\\material-dashboard-react.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\store.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\rootCategoryReducers.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\cartReducers.js",["567"],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\categoryReducers.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Work\\Vishudha\\tagline-mern-workspace\\tagline\\frontend\\src\\constants\\rootCategoryConstants.js",[],{"ruleId":"568","severity":1,"message":"569","line":1,"column":8,"nodeType":"570","messageId":"571","endLine":1,"endColumn":25},{"ruleId":"568","severity":1,"message":"572","line":3,"column":8,"nodeType":"570","messageId":"571","endLine":3,"endColumn":21},{"ruleId":"568","severity":1,"message":"573","line":7,"column":8,"nodeType":"570","messageId":"571","endLine":7,"endColumn":14},{"ruleId":"568","severity":1,"message":"574","line":28,"column":8,"nodeType":"570","messageId":"571","endLine":28,"endColumn":29},{"ruleId":"575","replacedBy":"576"},{"ruleId":"577","replacedBy":"578"},{"ruleId":"568","severity":1,"message":"579","line":3,"column":19,"nodeType":"570","messageId":"571","endLine":3,"endColumn":35},{"ruleId":"568","severity":1,"message":"580","line":4,"column":8,"nodeType":"570","messageId":"571","endLine":4,"endColumn":15},{"ruleId":"568","severity":1,"message":"581","line":5,"column":8,"nodeType":"570","messageId":"571","endLine":5,"endColumn":12},{"ruleId":"568","severity":1,"message":"582","line":6,"column":8,"nodeType":"570","messageId":"571","endLine":6,"endColumn":13},{"ruleId":"568","severity":1,"message":"583","line":7,"column":8,"nodeType":"570","messageId":"571","endLine":7,"endColumn":16},{"ruleId":"568","severity":1,"message":"584","line":9,"column":8,"nodeType":"570","messageId":"571","endLine":9,"endColumn":16},{"ruleId":"568","severity":1,"message":"585","line":10,"column":8,"nodeType":"570","messageId":"571","endLine":10,"endColumn":15},{"ruleId":"568","severity":1,"message":"586","line":12,"column":16,"nodeType":"570","messageId":"571","endLine":12,"endColumn":25},{"ruleId":"568","severity":1,"message":"587","line":12,"column":27,"nodeType":"570","messageId":"571","endLine":12,"endColumn":34},{"ruleId":"568","severity":1,"message":"588","line":12,"column":36,"nodeType":"570","messageId":"571","endLine":12,"endColumn":43},{"ruleId":"568","severity":1,"message":"589","line":2,"column":10,"nodeType":"570","messageId":"571","endLine":2,"endColumn":14},{"ruleId":"568","severity":1,"message":"590","line":15,"column":9,"nodeType":"570","messageId":"571","endLine":15,"endColumn":16},{"ruleId":"591","severity":1,"message":"592","line":119,"column":37,"nodeType":"593","messageId":"594","endLine":119,"endColumn":38},{"ruleId":"595","severity":1,"message":"596","line":127,"column":6,"nodeType":"597","endLine":127,"endColumn":23,"suggestions":"598"},{"ruleId":"568","severity":1,"message":"599","line":132,"column":11,"nodeType":"570","messageId":"571","endLine":132,"endColumn":18},{"ruleId":"568","severity":1,"message":"600","line":132,"column":20,"nodeType":"570","messageId":"571","endLine":132,"endColumn":25},{"ruleId":"568","severity":1,"message":"601","line":168,"column":11,"nodeType":"570","messageId":"571","endLine":168,"endColumn":19},{"ruleId":"602","severity":1,"message":"603","line":33,"column":24,"nodeType":"604","messageId":"605","endLine":33,"endColumn":33},{"ruleId":"568","severity":1,"message":"606","line":44,"column":9,"nodeType":"570","messageId":"571","endLine":44,"endColumn":13},{"ruleId":"568","severity":1,"message":"607","line":1,"column":17,"nodeType":"570","messageId":"571","endLine":1,"endColumn":25},{"ruleId":"568","severity":1,"message":"608","line":2,"column":8,"nodeType":"570","messageId":"571","endLine":2,"endColumn":13},{"ruleId":"568","severity":1,"message":"609","line":6,"column":8,"nodeType":"570","messageId":"571","endLine":6,"endColumn":15},{"ruleId":"568","severity":1,"message":"610","line":7,"column":22,"nodeType":"570","messageId":"571","endLine":7,"endColumn":30},{"ruleId":"568","severity":1,"message":"611","line":11,"column":8,"nodeType":"570","messageId":"571","endLine":11,"endColumn":17},{"ruleId":"568","severity":1,"message":"599","line":51,"column":11,"nodeType":"570","messageId":"571","endLine":51,"endColumn":18},{"ruleId":"568","severity":1,"message":"612","line":3,"column":10,"nodeType":"570","messageId":"571","endLine":3,"endColumn":14},{"ruleId":"568","severity":1,"message":"613","line":49,"column":10,"nodeType":"570","messageId":"571","endLine":49,"endColumn":14},{"ruleId":"568","severity":1,"message":"614","line":50,"column":10,"nodeType":"570","messageId":"571","endLine":50,"endColumn":17},{"ruleId":"568","severity":1,"message":"615","line":4,"column":10,"nodeType":"570","messageId":"571","endLine":4,"endColumn":22},{"ruleId":"568","severity":1,"message":"614","line":32,"column":10,"nodeType":"570","messageId":"571","endLine":32,"endColumn":17},{"ruleId":"568","severity":1,"message":"599","line":39,"column":11,"nodeType":"570","messageId":"571","endLine":39,"endColumn":18},{"ruleId":"568","severity":1,"message":"600","line":39,"column":20,"nodeType":"570","messageId":"571","endLine":39,"endColumn":25},{"ruleId":"568","severity":1,"message":"616","line":48,"column":20,"nodeType":"570","messageId":"571","endLine":48,"endColumn":33},{"ruleId":"568","severity":1,"message":"617","line":48,"column":42,"nodeType":"570","messageId":"571","endLine":48,"endColumn":53},{"ruleId":"568","severity":1,"message":"618","line":48,"column":55,"nodeType":"570","messageId":"571","endLine":48,"endColumn":61},{"ruleId":"568","severity":1,"message":"619","line":9,"column":3,"nodeType":"570","messageId":"571","endLine":9,"endColumn":19},{"ruleId":"568","severity":1,"message":"610","line":12,"column":22,"nodeType":"570","messageId":"571","endLine":12,"endColumn":30},{"ruleId":"568","severity":1,"message":"611","line":19,"column":8,"nodeType":"570","messageId":"571","endLine":19,"endColumn":17},{"ruleId":"568","severity":1,"message":"606","line":51,"column":9,"nodeType":"570","messageId":"571","endLine":51,"endColumn":13},{"ruleId":"568","severity":1,"message":"620","line":57,"column":10,"nodeType":"570","messageId":"571","endLine":57,"endColumn":19},{"ruleId":"568","severity":1,"message":"607","line":1,"column":17,"nodeType":"570","messageId":"571","endLine":1,"endColumn":25},{"ruleId":"568","severity":1,"message":"621","line":2,"column":10,"nodeType":"570","messageId":"571","endLine":2,"endColumn":20},{"ruleId":"568","severity":1,"message":"622","line":3,"column":8,"nodeType":"570","messageId":"571","endLine":3,"endColumn":22},{"ruleId":"568","severity":1,"message":"623","line":4,"column":8,"nodeType":"570","messageId":"571","endLine":4,"endColumn":24},{"ruleId":"568","severity":1,"message":"624","line":5,"column":8,"nodeType":"570","messageId":"571","endLine":5,"endColumn":24},{"ruleId":"568","severity":1,"message":"625","line":11,"column":3,"nodeType":"570","messageId":"571","endLine":11,"endColumn":29},{"ruleId":"568","severity":1,"message":"626","line":29,"column":3,"nodeType":"570","messageId":"571","endLine":29,"endColumn":14},{"ruleId":"568","severity":1,"message":"627","line":30,"column":3,"nodeType":"570","messageId":"571","endLine":30,"endColumn":9},{"ruleId":"568","severity":1,"message":"628","line":31,"column":3,"nodeType":"570","messageId":"571","endLine":31,"endColumn":11},{"ruleId":"568","severity":1,"message":"629","line":33,"column":3,"nodeType":"570","messageId":"571","endLine":33,"endColumn":14},{"ruleId":"568","severity":1,"message":"630","line":37,"column":8,"nodeType":"570","messageId":"571","endLine":37,"endColumn":24},{"ruleId":"568","severity":1,"message":"631","line":43,"column":8,"nodeType":"570","messageId":"571","endLine":43,"endColumn":21},{"ruleId":"568","severity":1,"message":"632","line":145,"column":9,"nodeType":"570","messageId":"571","endLine":145,"endColumn":24},{"ruleId":"595","severity":1,"message":"633","line":169,"column":6,"nodeType":"597","endLine":169,"endColumn":39,"suggestions":"634"},{"ruleId":"568","severity":1,"message":"635","line":175,"column":9,"nodeType":"570","messageId":"571","endLine":175,"endColumn":24},{"ruleId":"568","severity":1,"message":"636","line":3,"column":8,"nodeType":"570","messageId":"571","endLine":3,"endColumn":21},{"ruleId":"568","severity":1,"message":"637","line":8,"column":3,"nodeType":"570","messageId":"571","endLine":8,"endColumn":12},{"ruleId":"568","severity":1,"message":"612","line":2,"column":10,"nodeType":"570","messageId":"571","endLine":2,"endColumn":14},{"ruleId":"568","severity":1,"message":"638","line":4,"column":8,"nodeType":"570","messageId":"571","endLine":4,"endColumn":15},{"ruleId":"568","severity":1,"message":"609","line":5,"column":8,"nodeType":"570","messageId":"571","endLine":5,"endColumn":15},{"ruleId":"568","severity":1,"message":"599","line":19,"column":11,"nodeType":"570","messageId":"571","endLine":19,"endColumn":18},{"ruleId":"568","severity":1,"message":"600","line":19,"column":20,"nodeType":"570","messageId":"571","endLine":19,"endColumn":25},{"ruleId":"568","severity":1,"message":"639","line":23,"column":14,"nodeType":"570","messageId":"571","endLine":23,"endColumn":27},{"ruleId":"568","severity":1,"message":"640","line":24,"column":12,"nodeType":"570","messageId":"571","endLine":24,"endColumn":23},{"ruleId":"568","severity":1,"message":"641","line":43,"column":9,"nodeType":"570","messageId":"571","endLine":43,"endColumn":22},{"ruleId":"568","severity":1,"message":"642","line":1,"column":27,"nodeType":"570","messageId":"571","endLine":1,"endColumn":36},{"ruleId":"568","severity":1,"message":"643","line":7,"column":8,"nodeType":"570","messageId":"571","endLine":7,"endColumn":18},{"ruleId":"568","severity":1,"message":"644","line":10,"column":10,"nodeType":"570","messageId":"571","endLine":10,"endColumn":19},{"ruleId":"568","severity":1,"message":"645","line":62,"column":9,"nodeType":"570","messageId":"571","endLine":62,"endColumn":19},{"ruleId":"568","severity":1,"message":"646","line":63,"column":9,"nodeType":"570","messageId":"571","endLine":63,"endColumn":25},{"ruleId":"568","severity":1,"message":"647","line":65,"column":9,"nodeType":"570","messageId":"571","endLine":65,"endColumn":30},{"ruleId":"568","severity":1,"message":"648","line":73,"column":9,"nodeType":"570","messageId":"571","endLine":73,"endColumn":24},{"ruleId":"568","severity":1,"message":"649","line":78,"column":9,"nodeType":"570","messageId":"571","endLine":78,"endColumn":29},{"ruleId":"568","severity":1,"message":"650","line":106,"column":10,"nodeType":"570","messageId":"571","endLine":106,"endColumn":15},{"ruleId":"568","severity":1,"message":"651","line":106,"column":17,"nodeType":"570","messageId":"571","endLine":106,"endColumn":25},{"ruleId":"568","severity":1,"message":"652","line":107,"column":10,"nodeType":"570","messageId":"571","endLine":107,"endColumn":18},{"ruleId":"568","severity":1,"message":"653","line":107,"column":20,"nodeType":"570","messageId":"571","endLine":107,"endColumn":31},{"ruleId":"568","severity":1,"message":"654","line":100,"column":27,"nodeType":"570","messageId":"571","endLine":100,"endColumn":34},{"ruleId":"568","severity":1,"message":"638","line":4,"column":8,"nodeType":"570","messageId":"571","endLine":4,"endColumn":15},{"ruleId":"568","severity":1,"message":"609","line":5,"column":8,"nodeType":"570","messageId":"571","endLine":5,"endColumn":15},{"ruleId":"568","severity":1,"message":"612","line":6,"column":10,"nodeType":"570","messageId":"571","endLine":6,"endColumn":14},{"ruleId":"568","severity":1,"message":"655","line":13,"column":17,"nodeType":"570","messageId":"571","endLine":13,"endColumn":20},{"ruleId":"568","severity":1,"message":"656","line":13,"column":22,"nodeType":"570","messageId":"571","endLine":13,"endColumn":25},{"ruleId":"568","severity":1,"message":"657","line":14,"column":8,"nodeType":"570","messageId":"571","endLine":14,"endColumn":16},{"ruleId":"568","severity":1,"message":"658","line":15,"column":8,"nodeType":"570","messageId":"571","endLine":15,"endColumn":23},{"ruleId":"568","severity":1,"message":"659","line":16,"column":8,"nodeType":"570","messageId":"571","endLine":16,"endColumn":25},{"ruleId":"568","severity":1,"message":"660","line":17,"column":10,"nodeType":"570","messageId":"571","endLine":17,"endColumn":30},{"ruleId":"568","severity":1,"message":"661","line":22,"column":3,"nodeType":"570","messageId":"571","endLine":22,"endColumn":7},{"ruleId":"568","severity":1,"message":"662","line":23,"column":3,"nodeType":"570","messageId":"571","endLine":23,"endColumn":9},{"ruleId":"568","severity":1,"message":"663","line":24,"column":3,"nodeType":"570","messageId":"571","endLine":24,"endColumn":12},{"ruleId":"568","severity":1,"message":"664","line":25,"column":3,"nodeType":"570","messageId":"571","endLine":25,"endColumn":8},{"ruleId":"568","severity":1,"message":"665","line":26,"column":3,"nodeType":"570","messageId":"571","endLine":26,"endColumn":13},{"ruleId":"568","severity":1,"message":"599","line":70,"column":11,"nodeType":"570","messageId":"571","endLine":70,"endColumn":18},{"ruleId":"568","severity":1,"message":"600","line":70,"column":20,"nodeType":"570","messageId":"571","endLine":70,"endColumn":25},{"ruleId":"568","severity":1,"message":"626","line":13,"column":3,"nodeType":"570","messageId":"571","endLine":13,"endColumn":14},{"ruleId":"568","severity":1,"message":"666","line":14,"column":3,"nodeType":"570","messageId":"571","endLine":14,"endColumn":13},{"ruleId":"568","severity":1,"message":"667","line":15,"column":3,"nodeType":"570","messageId":"571","endLine":15,"endColumn":8},{"ruleId":"568","severity":1,"message":"668","line":16,"column":3,"nodeType":"570","messageId":"571","endLine":16,"endColumn":17},{"ruleId":"568","severity":1,"message":"612","line":18,"column":10,"nodeType":"570","messageId":"571","endLine":18,"endColumn":14},{"ruleId":"568","severity":1,"message":"669","line":19,"column":10,"nodeType":"570","messageId":"571","endLine":19,"endColumn":31},{"ruleId":"568","severity":1,"message":"670","line":8,"column":8,"nodeType":"570","messageId":"571","endLine":8,"endColumn":13},{"ruleId":"568","severity":1,"message":"671","line":13,"column":8,"nodeType":"570","messageId":"571","endLine":13,"endColumn":24},{"ruleId":"568","severity":1,"message":"672","line":16,"column":8,"nodeType":"570","messageId":"571","endLine":16,"endColumn":19},{"ruleId":"568","severity":1,"message":"673","line":19,"column":8,"nodeType":"570","messageId":"571","endLine":19,"endColumn":24},{"ruleId":"568","severity":1,"message":"674","line":70,"column":25,"nodeType":"570","messageId":"571","endLine":70,"endColumn":43},{"ruleId":"568","severity":1,"message":"675","line":72,"column":10,"nodeType":"570","messageId":"571","endLine":72,"endColumn":19},{"ruleId":"595","severity":1,"message":"676","line":98,"column":6,"nodeType":"597","endLine":98,"endColumn":46,"suggestions":"677"},{"ruleId":"568","severity":1,"message":"678","line":120,"column":9,"nodeType":"570","messageId":"571","endLine":120,"endColumn":22},{"ruleId":"568","severity":1,"message":"679","line":143,"column":9,"nodeType":"570","messageId":"571","endLine":143,"endColumn":24},{"ruleId":"568","severity":1,"message":"664","line":4,"column":8,"nodeType":"570","messageId":"571","endLine":4,"endColumn":13},{"ruleId":"568","severity":1,"message":"662","line":5,"column":10,"nodeType":"570","messageId":"571","endLine":5,"endColumn":16},{"ruleId":"568","severity":1,"message":"612","line":7,"column":10,"nodeType":"570","messageId":"571","endLine":7,"endColumn":14},{"ruleId":"568","severity":1,"message":"680","line":9,"column":8,"nodeType":"570","messageId":"571","endLine":9,"endColumn":19},{"ruleId":"568","severity":1,"message":"662","line":2,"column":3,"nodeType":"570","messageId":"571","endLine":2,"endColumn":9},{"ruleId":"568","severity":1,"message":"626","line":3,"column":3,"nodeType":"570","messageId":"571","endLine":3,"endColumn":14},{"ruleId":"568","severity":1,"message":"666","line":5,"column":3,"nodeType":"570","messageId":"571","endLine":5,"endColumn":13},{"ruleId":"568","severity":1,"message":"628","line":6,"column":3,"nodeType":"570","messageId":"571","endLine":6,"endColumn":11},{"ruleId":"568","severity":1,"message":"664","line":7,"column":3,"nodeType":"570","messageId":"571","endLine":7,"endColumn":8},{"ruleId":"568","severity":1,"message":"627","line":8,"column":3,"nodeType":"570","messageId":"571","endLine":8,"endColumn":9},{"ruleId":"568","severity":1,"message":"663","line":9,"column":3,"nodeType":"570","messageId":"571","endLine":9,"endColumn":12},{"ruleId":"568","severity":1,"message":"643","line":10,"column":3,"nodeType":"570","messageId":"571","endLine":10,"endColumn":13},{"ruleId":"568","severity":1,"message":"612","line":6,"column":10,"nodeType":"570","messageId":"571","endLine":6,"endColumn":14},{"ruleId":"568","severity":1,"message":"681","line":23,"column":3,"nodeType":"570","messageId":"571","endLine":23,"endColumn":16},{"ruleId":"568","severity":1,"message":"661","line":27,"column":3,"nodeType":"570","messageId":"571","endLine":27,"endColumn":7},{"ruleId":"568","severity":1,"message":"663","line":29,"column":3,"nodeType":"570","messageId":"571","endLine":29,"endColumn":12},{"ruleId":"568","severity":1,"message":"664","line":30,"column":3,"nodeType":"570","messageId":"571","endLine":30,"endColumn":8},{"ruleId":"568","severity":1,"message":"665","line":31,"column":3,"nodeType":"570","messageId":"571","endLine":31,"endColumn":13},{"ruleId":"568","severity":1,"message":"682","line":114,"column":9,"nodeType":"570","messageId":"571","endLine":114,"endColumn":22},{"ruleId":"568","severity":1,"message":"608","line":1,"column":8,"nodeType":"570","messageId":"571","endLine":1,"endColumn":13},{"ruleId":"568","severity":1,"message":"683","line":17,"column":3,"nodeType":"570","messageId":"571","endLine":17,"endColumn":16},{"ruleId":"568","severity":1,"message":"684","line":19,"column":10,"nodeType":"570","messageId":"571","endLine":19,"endColumn":15},{"ruleId":"568","severity":1,"message":"657","line":20,"column":8,"nodeType":"570","messageId":"571","endLine":20,"endColumn":16},{"ruleId":"568","severity":1,"message":"658","line":21,"column":8,"nodeType":"570","messageId":"571","endLine":21,"endColumn":23},{"ruleId":"568","severity":1,"message":"659","line":22,"column":8,"nodeType":"570","messageId":"571","endLine":22,"endColumn":25},{"ruleId":"568","severity":1,"message":"660","line":24,"column":3,"nodeType":"570","messageId":"571","endLine":24,"endColumn":23},{"ruleId":"568","severity":1,"message":"685","line":25,"column":3,"nodeType":"570","messageId":"571","endLine":25,"endColumn":23},{"ruleId":"568","severity":1,"message":"686","line":28,"column":3,"nodeType":"570","messageId":"571","endLine":28,"endColumn":15},{"ruleId":"568","severity":1,"message":"687","line":29,"column":3,"nodeType":"570","messageId":"571","endLine":29,"endColumn":16},{"ruleId":"568","severity":1,"message":"681","line":30,"column":3,"nodeType":"570","messageId":"571","endLine":30,"endColumn":16},{"ruleId":"568","severity":1,"message":"610","line":32,"column":10,"nodeType":"570","messageId":"571","endLine":32,"endColumn":18},{"ruleId":"568","severity":1,"message":"643","line":34,"column":3,"nodeType":"570","messageId":"571","endLine":34,"endColumn":13},{"ruleId":"568","severity":1,"message":"664","line":38,"column":3,"nodeType":"570","messageId":"571","endLine":38,"endColumn":8},{"ruleId":"568","severity":1,"message":"665","line":39,"column":3,"nodeType":"570","messageId":"571","endLine":39,"endColumn":13},{"ruleId":"568","severity":1,"message":"688","line":107,"column":10,"nodeType":"570","messageId":"571","endLine":107,"endColumn":15},{"ruleId":"568","severity":1,"message":"689","line":113,"column":10,"nodeType":"570","messageId":"571","endLine":113,"endColumn":19},{"ruleId":"568","severity":1,"message":"690","line":113,"column":21,"nodeType":"570","messageId":"571","endLine":113,"endColumn":33},{"ruleId":"595","severity":1,"message":"691","line":141,"column":6,"nodeType":"597","endLine":141,"endColumn":36,"suggestions":"692"},{"ruleId":"568","severity":1,"message":"693","line":18,"column":10,"nodeType":"570","messageId":"571","endLine":18,"endColumn":24},{"ruleId":"568","severity":1,"message":"694","line":18,"column":26,"nodeType":"570","messageId":"571","endLine":18,"endColumn":43},{"ruleId":"595","severity":1,"message":"695","line":31,"column":6,"nodeType":"597","endLine":31,"endColumn":8,"suggestions":"696"},{"ruleId":"568","severity":1,"message":"607","line":1,"column":17,"nodeType":"570","messageId":"571","endLine":1,"endColumn":25},{"ruleId":"568","severity":1,"message":"612","line":2,"column":10,"nodeType":"570","messageId":"571","endLine":2,"endColumn":14},{"ruleId":"568","severity":1,"message":"697","line":3,"column":8,"nodeType":"570","messageId":"571","endLine":3,"endColumn":26},{"ruleId":"568","severity":1,"message":"610","line":5,"column":22,"nodeType":"570","messageId":"571","endLine":5,"endColumn":30},{"ruleId":"568","severity":1,"message":"665","line":3,"column":8,"nodeType":"570","messageId":"571","endLine":3,"endColumn":18},{"ruleId":"568","severity":1,"message":"607","line":1,"column":17,"nodeType":"570","messageId":"571","endLine":1,"endColumn":25},{"ruleId":"568","severity":1,"message":"599","line":75,"column":11,"nodeType":"570","messageId":"571","endLine":75,"endColumn":18},{"ruleId":"568","severity":1,"message":"600","line":75,"column":20,"nodeType":"570","messageId":"571","endLine":75,"endColumn":25},{"ruleId":"568","severity":1,"message":"698","line":77,"column":7,"nodeType":"570","messageId":"571","endLine":77,"endColumn":17},{"ruleId":"568","severity":1,"message":"662","line":2,"column":10,"nodeType":"570","messageId":"571","endLine":2,"endColumn":16},{"ruleId":"568","severity":1,"message":"661","line":2,"column":18,"nodeType":"570","messageId":"571","endLine":2,"endColumn":22},{"ruleId":"568","severity":1,"message":"664","line":2,"column":24,"nodeType":"570","messageId":"571","endLine":2,"endColumn":29},{"ruleId":"568","severity":1,"message":"643","line":2,"column":42,"nodeType":"570","messageId":"571","endLine":2,"endColumn":52},{"ruleId":"568","severity":1,"message":"699","line":9,"column":8,"nodeType":"570","messageId":"571","endLine":9,"endColumn":17},{"ruleId":"568","severity":1,"message":"601","line":80,"column":20,"nodeType":"570","messageId":"571","endLine":80,"endColumn":28},{"ruleId":"568","severity":1,"message":"601","line":197,"column":20,"nodeType":"570","messageId":"571","endLine":197,"endColumn":28},{"ruleId":"568","severity":1,"message":"601","line":234,"column":20,"nodeType":"570","messageId":"571","endLine":234,"endColumn":28},{"ruleId":"568","severity":1,"message":"700","line":12,"column":3,"nodeType":"570","messageId":"571","endLine":12,"endColumn":26},{"ruleId":"568","severity":1,"message":"701","line":14,"column":3,"nodeType":"570","messageId":"571","endLine":14,"endColumn":23},{"ruleId":"568","severity":1,"message":"601","line":132,"column":20,"nodeType":"570","messageId":"571","endLine":132,"endColumn":28},{"ruleId":"568","severity":1,"message":"601","line":206,"column":20,"nodeType":"570","messageId":"571","endLine":206,"endColumn":28},{"ruleId":"568","severity":1,"message":"702","line":4,"column":8,"nodeType":"570","messageId":"571","endLine":4,"endColumn":19},{"ruleId":"568","severity":1,"message":"662","line":6,"column":8,"nodeType":"570","messageId":"571","endLine":6,"endColumn":14},{"ruleId":"568","severity":1,"message":"607","line":1,"column":17,"nodeType":"570","messageId":"571","endLine":1,"endColumn":25},{"ruleId":"568","severity":1,"message":"599","line":76,"column":11,"nodeType":"570","messageId":"571","endLine":76,"endColumn":18},{"ruleId":"568","severity":1,"message":"600","line":76,"column":20,"nodeType":"570","messageId":"571","endLine":76,"endColumn":25},{"ruleId":"568","severity":1,"message":"663","line":2,"column":8,"nodeType":"570","messageId":"571","endLine":2,"endColumn":17},{"ruleId":"568","severity":1,"message":"703","line":3,"column":10,"nodeType":"570","messageId":"571","endLine":3,"endColumn":20},{"ruleId":"568","severity":1,"message":"704","line":4,"column":31,"nodeType":"570","messageId":"571","endLine":4,"endColumn":40},{"ruleId":"568","severity":1,"message":"705","line":5,"column":8,"nodeType":"570","messageId":"571","endLine":5,"endColumn":16},{"ruleId":"568","severity":1,"message":"706","line":16,"column":7,"nodeType":"570","messageId":"571","endLine":16,"endColumn":28},{"ruleId":"568","severity":1,"message":"707","line":170,"column":22,"nodeType":"570","messageId":"571","endLine":170,"endColumn":35},{"ruleId":"568","severity":1,"message":"708","line":3,"column":3,"nodeType":"570","messageId":"571","endLine":3,"endColumn":18},"no-unused-vars","'CategoriesSubMenu' is defined but never used.","Identifier","unusedVar","'SubMenuHeader' is defined but never used.","'Header' is defined but never used.","'CategoriesSubMenuVer2' is defined but never used.","no-native-reassign",["709"],"no-negated-in-lhs",["710"],"'SectionAlternate' is defined but never used.","'Contact' is defined but never used.","'Hero' is defined but never used.","'Story' is defined but never used.","'WhoWeAre' is defined but never used.","'Partners' is defined but never used.","'Gallery' is defined but never used.","'companies' is defined but never used.","'mapData' is defined but never used.","'gallery' is defined but never used.","'fade' is defined but never used.","'classes' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'orderTypeSelected' and 'uom'. Either include them or remove the dependency array.","ArrayExpression",["711"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'userInfo' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'isMd' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Spinner' is defined but never used.","'useTheme' is defined but never used.","'imagePath' is defined but never used.","'Link' is defined but never used.","'role' is assigned a value but never used.","'message' is assigned a value but never used.","'listMyOrders' is defined but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'orders' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'payMethod' is assigned a value but never used.","'withStyles' is defined but never used.","'MuiDialogTitle' is defined but never used.","'MuiDialogContent' is defined but never used.","'MuiDialogActions' is defined but never used.","'fetchUpdatedCartItemsCount' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'ButtonGroup' is defined but never used.","'EditOutlinedIcon' is defined but never used.","'ProductScreen' is defined but never used.","'handleClickOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'qty'. Either include it or remove the dependency array.",["712"],"'editCartHandler' is assigned a value but never used.","'CheckoutSteps' is defined but never used.","'FormLabel' is defined but never used.","'Message' is defined but never used.","'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'useEffect' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'isMenuOpen' is assigned a value but never used.","'isMobileMenuOpen' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'product' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Paginate' is defined but never used.","'EditRoundedIcon' is defined but never used.","'DeleteOutlineIcon' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'InputAdornment' is defined but never used.","'AccountCircleOutlined' is defined but never used.","'Badge' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'LoginScreen' is defined but never used.","'CustomizedBadges' is defined but never used.","'setAlreadyLoggedIn' is assigned a value but never used.","'targetUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["713"],"'logoutHandler' is assigned a value but never used.","'handleCartItems' is assigned a value but never used.","'OurProducts' is defined but never used.","'createProduct' is defined but never used.","'deleteHandler' is assigned a value but never used.","'updateProduct' is defined but never used.","'Table' is defined but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'listProducts' is defined but never used.","'deleteProduct' is defined but never used.","'price' is assigned a value but never used.","'uploading' is assigned a value but never used.","'setUploading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product.brand', 'product.category', 'product.countInStock', 'product.description', 'product.id', 'product.image', 'product.name', and 'product.price'. Either include them or remove the dependency array.",["714"],"'cartItemsCount' is assigned a value but never used.","'setCartItemsCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["715"],"'test_product_image' is defined but never used.","'tempImgUrl' is assigned a value but never used.","'TableHead' is defined but never used.","'PRODUCT_DETAILS_REQUEST' is defined but never used.","'PRODUCT_DETAILS_FAIL' is defined but never used.","'CardActions' is defined but never used.","'makeStyles' is defined but never used.","'InputBase' is defined but never used.","'GridItem' is defined but never used.","'updatedCartItemsCount' is assigned a value but never used.","'setActiveStep' is assigned a value but never used.","'CART_EDFIT_ITEM' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"716","fix":"717"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},"Update the dependencies array to be: [dispatch, match, orderTypeSelected, uom]",{"range":"726","text":"727"},"Update the dependencies array to be: [dispatch, productId, uom, order, qty]",{"range":"728","text":"729"},"Update the dependencies array to be: [loginLogoutBtnTitle, loginLogoutBtnUrl, userInfo]",{"range":"730","text":"731"},"Update the dependencies array to be: [dispatch, history, product.brand, product.category, product.countInStock, product.description, product.id, product.image, product.name, product.price, productId]",{"range":"732","text":"733"},"Update the dependencies array to be: [dispatch]",{"range":"734","text":"735"},[3777,3794],"[dispatch, match, orderTypeSelected, uom]",[4507,4540],"[dispatch, productId, uom, order, qty]",[3131,3171],"[loginLogoutBtnTitle, loginLogoutBtnUrl, userInfo]",[4235,4265],"[dispatch, history, product.brand, product.category, product.countInStock, product.description, product.id, product.image, product.name, product.price, productId]",[1228,1230],"[dispatch]"]